/*
 * generated by Xtext 2.25.0
 */
grammar InternalReflexOld;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ru.iaie.reflexold.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ru.iaie.reflexold.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ru.iaie.reflexold.services.ReflexOldGrammarAccess;

}

@parser::members {

 	private ReflexOldGrammarAccess grammarAccess;

    public InternalReflexOldParser(TokenStream input, ReflexOldGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected ReflexOldGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_en_0_0='PROGR'
					{
						newLeafNode(lv_en_0_0, grammarAccess.getProgramAccess().getEnPROGRKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProgramRule());
						}
						setWithLastConsumed($current, "en", lv_en_0_0 != null, "PROGR");
					}
				)
			)
			    |
			otherlv_1='\u041F\u0420\u041E\u0413\u0420'
			{
				newLeafNode(otherlv_1, grammarAccess.getProgramAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterGheCyrillicCapitalLetterErKeyword_0_1());
			}
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProgramRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ru.iaie.reflexold.ReflexOld.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getClockClockDefinitionParserRuleCall_3_0());
				}
				lv_clock_4_0=ruleClockDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					set(
						$current,
						"clock",
						lv_clock_4_0,
						"ru.iaie.reflexold.ReflexOld.ClockDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getConstsConstParserRuleCall_4_0_0());
					}
					lv_consts_5_0=ruleConst
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						add(
							$current,
							"consts",
							lv_consts_5_0,
							"ru.iaie.reflexold.ReflexOld.Const");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getEnumsEnumParserRuleCall_4_1_0());
					}
					lv_enums_6_0=ruleEnum
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						add(
							$current,
							"enums",
							lv_enums_6_0,
							"ru.iaie.reflexold.ReflexOld.Enum");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_4_2_0());
					}
					lv_functions_7_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						add(
							$current,
							"functions",
							lv_functions_7_0,
							"ru.iaie.reflexold.ReflexOld.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getPortsPortParserRuleCall_4_3_0());
					}
					lv_ports_8_0=rulePort
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						add(
							$current,
							"ports",
							lv_ports_8_0,
							"ru.iaie.reflexold.ReflexOld.Port");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getProcessesProcessParserRuleCall_4_4_0());
					}
					lv_processes_9_0=ruleProcess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						add(
							$current,
							"processes",
							lv_processes_9_0,
							"ru.iaie.reflexold.ReflexOld.Process");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleClockDefinition
entryRuleClockDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClockDefinitionRule()); }
	iv_ruleClockDefinition=ruleClockDefinition
	{ $current=$iv_ruleClockDefinition.current; }
	EOF;

// Rule ClockDefinition
ruleClockDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='TACT'
			{
				newLeafNode(otherlv_0, grammarAccess.getClockDefinitionAccess().getTACTKeyword_0_0());
			}
			    |
			otherlv_1='\u0422\u0410\u041A\u0422'
			{
				newLeafNode(otherlv_1, grammarAccess.getClockDefinitionAccess().getCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterKaCyrillicCapitalLetterTeKeyword_0_1());
			}
		)
		(
			(
				lv_value_2_0=RULE_INTEGER
				{
					newLeafNode(lv_value_2_0, grammarAccess.getClockDefinitionAccess().getValueINTEGERTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClockDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"ru.iaie.reflexold.ReflexOld.INTEGER");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getClockDefinitionAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessRule()); }
	iv_ruleProcess=ruleProcess
	{ $current=$iv_ruleProcess.current; }
	EOF;

// Rule Process
ruleProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='PROC'
			{
				newLeafNode(otherlv_0, grammarAccess.getProcessAccess().getPROCKeyword_0_0());
			}
			    |
			otherlv_1='\u041F\u0420\u041E\u0426'
			{
				newLeafNode(otherlv_1, grammarAccess.getProcessAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_0_1());
			}
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ru.iaie.reflexold.ReflexOld.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getProcessAccess().getImportsImportedVariableListParserRuleCall_3_0_0_0());
						}
						lv_imports_4_0=ruleImportedVariableList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProcessRule());
							}
							add(
								$current,
								"imports",
								lv_imports_4_0,
								"ru.iaie.reflexold.ReflexOld.ImportedVariableList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getProcessAccess().getVariablesProcessVariableParserRuleCall_3_0_1_0());
						}
						lv_variables_5_0=ruleProcessVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProcessRule());
							}
							add(
								$current,
								"variables",
								lv_variables_5_0,
								"ru.iaie.reflexold.ReflexOld.ProcessVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getProcessAccess().getSemicolonKeyword_3_1());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessAccess().getStatesStateParserRuleCall_4_0());
				}
				lv_states_7_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessRule());
					}
					add(
						$current,
						"states",
						lv_states_7_0,
						"ru.iaie.reflexold.ReflexOld.State");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='STATE'
			{
				newLeafNode(otherlv_0, grammarAccess.getStateAccess().getSTATEKeyword_0_0());
			}
			    |
			otherlv_1='\u0421\u041E\u0421\u0422'
			{
				newLeafNode(otherlv_1, grammarAccess.getStateAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterOCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_0_1());
			}
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ru.iaie.reflexold.ReflexOld.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getStateFunctionStatementSequenceParserRuleCall_3_0());
				}
				lv_stateFunction_4_0=ruleStatementSequence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					set(
						$current,
						"stateFunction",
						lv_stateFunction_4_0,
						"ru.iaie.reflexold.ReflexOld.StatementSequence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getTimeoutFunctionTimeoutFunctionParserRuleCall_4_0());
				}
				lv_timeoutFunction_5_0=ruleTimeoutFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					set(
						$current,
						"timeoutFunction",
						lv_timeoutFunction_5_0,
						"ru.iaie.reflexold.ReflexOld.TimeoutFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleImportedVariableList
entryRuleImportedVariableList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportedVariableListRule()); }
	iv_ruleImportedVariableList=ruleImportedVariableList
	{ $current=$iv_ruleImportedVariableList.current; }
	EOF;

// Rule ImportedVariableList
ruleImportedVariableList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='FROM'
				{
					newLeafNode(otherlv_0, grammarAccess.getImportedVariableListAccess().getFROMKeyword_0_0_0());
				}
				otherlv_1='PROC'
				{
					newLeafNode(otherlv_1, grammarAccess.getImportedVariableListAccess().getPROCKeyword_0_0_1());
				}
			)
			    |
			(
				otherlv_2='\u0418\u0417'
				{
					newLeafNode(otherlv_2, grammarAccess.getImportedVariableListAccess().getCyrillicCapitalLetterICyrillicCapitalLetterZeKeyword_0_1_0());
				}
				otherlv_3='\u041F\u0420\u041E\u0426'
				{
					newLeafNode(otherlv_3, grammarAccess.getImportedVariableListAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_0_1_1());
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedVariableListRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getImportedVariableListAccess().getProcessProcessCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedVariableListRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableCrossReference_2_0());
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getImportedVariableListAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportedVariableListRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableCrossReference_3_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleProcessVariable
entryRuleProcessVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessVariableRule()); }
	iv_ruleProcessVariable=ruleProcessVariable
	{ $current=$iv_ruleProcessVariable.current; }
	EOF;

// Rule ProcessVariable
ruleProcessVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProcessVariableAccess().getPhysicalVariableParserRuleCall_0_0());
			}
			this_PhysicalVariable_0=rulePhysicalVariable
			{
				$current = $this_PhysicalVariable_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getProcessVariableAccess().getProgramVariableParserRuleCall_0_1());
			}
			this_ProgramVariable_1=ruleProgramVariable
			{
				$current = $this_ProgramVariable_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				(
					(
						lv_local_2_1='LOCAL'
						{
							newLeafNode(lv_local_2_1, grammarAccess.getProcessVariableAccess().getLocalLOCALKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getProcessVariableRule());
							}
							setWithLastConsumed($current, "local", lv_local_2_1 != null, null);
						}
						    |
						lv_local_2_2='\u041B\u041E\u041A\u0410\u041B'
						{
							newLeafNode(lv_local_2_2, grammarAccess.getProcessVariableAccess().getLocalCyrillicCapitalLetterElCyrillicCapitalLetterOCyrillicCapitalLetterKaCyrillicCapitalLetterACyrillicCapitalLetterElKeyword_1_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getProcessVariableRule());
							}
							setWithLastConsumed($current, "local", lv_local_2_2 != null, null);
						}
					)
				)
			)
			    |
			(
				(
					(
						(
							lv_shared_3_1='FOR'
							{
								newLeafNode(lv_shared_3_1, grammarAccess.getProcessVariableAccess().getSharedFORKeyword_1_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProcessVariableRule());
								}
								setWithLastConsumed($current, "shared", lv_shared_3_1 != null, null);
							}
							    |
							lv_shared_3_2='\u0414\u041B\u042F'
							{
								newLeafNode(lv_shared_3_2, grammarAccess.getProcessVariableAccess().getSharedCyrillicCapitalLetterDeCyrillicCapitalLetterElCyrillicCapitalLetterYaKeyword_1_1_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProcessVariableRule());
								}
								setWithLastConsumed($current, "shared", lv_shared_3_2 != null, null);
							}
						)
					)
				)
				(
					(
						otherlv_4='ALL'
						{
							newLeafNode(otherlv_4, grammarAccess.getProcessVariableAccess().getALLKeyword_1_1_1_0_0());
						}
						    |
						otherlv_5='\u0412\u0421\u0415\u0425'
						{
							newLeafNode(otherlv_5, grammarAccess.getProcessVariableAccess().getCyrillicCapitalLetterVeCyrillicCapitalLetterEsCyrillicCapitalLetterIeCyrillicCapitalLetterHaKeyword_1_1_1_0_1());
						}
					)
					    |
					(
						(
							otherlv_6='PROC'
							{
								newLeafNode(otherlv_6, grammarAccess.getProcessVariableAccess().getPROCKeyword_1_1_1_1_0_0());
							}
							    |
							otherlv_7='\u041F\u0420\u041E\u0426'
							{
								newLeafNode(otherlv_7, grammarAccess.getProcessVariableAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1_1_1_0_1());
							}
						)
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getProcessVariableRule());
									}
								}
								otherlv_8=RULE_ID
								{
									newLeafNode(otherlv_8, grammarAccess.getProcessVariableAccess().getProcessesProcessCrossReference_1_1_1_1_1_0());
								}
							)
						)
						(
							otherlv_9=','
							{
								newLeafNode(otherlv_9, grammarAccess.getProcessVariableAccess().getCommaKeyword_1_1_1_1_2_0());
							}
							(
								(
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getProcessVariableRule());
										}
									}
									otherlv_10=RULE_ID
									{
										newLeafNode(otherlv_10, grammarAccess.getProcessVariableAccess().getProcessesProcessCrossReference_1_1_1_1_2_1_0());
									}
								)
							)
						)*
					)
				)
			)
		)
	)
;

// Entry rule entryRulePhysicalVariable
entryRulePhysicalVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhysicalVariableRule()); }
	iv_rulePhysicalVariable=rulePhysicalVariable
	{ $current=$iv_rulePhysicalVariable.current; }
	EOF;

// Rule PhysicalVariable
rulePhysicalVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicalVariableAccess().getTypeTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicalVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"ru.iaie.reflexold.ReflexOld.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPhysicalVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhysicalVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ru.iaie.reflexold.ReflexOld.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getPhysicalVariableAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicalVariableAccess().getMappingPortMappingParserRuleCall_3_0());
				}
				lv_mapping_3_0=rulePortMapping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicalVariableRule());
					}
					set(
						$current,
						"mapping",
						lv_mapping_3_0,
						"ru.iaie.reflexold.ReflexOld.PortMapping");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePortMapping
entryRulePortMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortMappingRule()); }
	iv_rulePortMapping=rulePortMapping
	{ $current=$iv_rulePortMapping.current; }
	EOF;

// Rule PortMapping
rulePortMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getPortMappingAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortMappingRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getPortMappingAccess().getPortPortCrossReference_1_0());
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getPortMappingAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				lv_bits_3_0=RULE_INTEGER
				{
					newLeafNode(lv_bits_3_0, grammarAccess.getPortMappingAccess().getBitsINTEGERTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortMappingRule());
					}
					setWithLastConsumed(
						$current,
						"bits",
						lv_bits_3_0,
						"ru.iaie.reflexold.ReflexOld.INTEGER");
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getPortMappingAccess().getRightSquareBracketKeyword_4());
		}
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPortMappingAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePort
entryRulePort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	iv_rulePort=rulePort
	{ $current=$iv_rulePort.current; }
	EOF;

// Rule Port
rulePort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPortAccess().getTypePortTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=rulePortType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"ru.iaie.reflexold.ReflexOld.PortType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPortAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ru.iaie.reflexold.ReflexOld.ID");
				}
			)
		)
		(
			(
				lv_addr1_2_0=RULE_INTEGER
				{
					newLeafNode(lv_addr1_2_0, grammarAccess.getPortAccess().getAddr1INTEGERTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortRule());
					}
					setWithLastConsumed(
						$current,
						"addr1",
						lv_addr1_2_0,
						"ru.iaie.reflexold.ReflexOld.INTEGER");
				}
			)
		)
		(
			(
				lv_addr2_3_0=RULE_INTEGER
				{
					newLeafNode(lv_addr2_3_0, grammarAccess.getPortAccess().getAddr2INTEGERTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortRule());
					}
					setWithLastConsumed(
						$current,
						"addr2",
						lv_addr2_3_0,
						"ru.iaie.reflexold.ReflexOld.INTEGER");
				}
			)
		)
		(
			(
				lv_size_4_0=RULE_INTEGER
				{
					newLeafNode(lv_size_4_0, grammarAccess.getPortAccess().getSizeINTEGERTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_4_0,
						"ru.iaie.reflexold.ReflexOld.INTEGER");
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getPortAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleProgramVariable
entryRuleProgramVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramVariableRule()); }
	iv_ruleProgramVariable=ruleProgramVariable
	{ $current=$iv_ruleProgramVariable.current; }
	EOF;

// Rule ProgramVariable
ruleProgramVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramVariableAccess().getTypeTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramVariableRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"ru.iaie.reflexold.ReflexOld.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProgramVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProgramVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ru.iaie.reflexold.ReflexOld.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTimeoutFunction
entryRuleTimeoutFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeoutFunctionRule()); }
	iv_ruleTimeoutFunction=ruleTimeoutFunction
	{ $current=$iv_ruleTimeoutFunction.current; }
	EOF;

// Rule TimeoutFunction
ruleTimeoutFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='TIMEOUT'
			{
				newLeafNode(otherlv_0, grammarAccess.getTimeoutFunctionAccess().getTIMEOUTKeyword_0_0());
			}
			    |
			otherlv_1='\u0422\u0410\u0419\u041C\u0410\u0423\u0422'
			{
				newLeafNode(otherlv_1, grammarAccess.getTimeoutFunctionAccess().getCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterShortICyrillicCapitalLetterEmCyrillicCapitalLetterACyrillicCapitalLetterUCyrillicCapitalLetterTeKeyword_0_1());
			}
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTimeoutFunctionRule());
				}
				newCompositeNode(grammarAccess.getTimeoutFunctionAccess().getTimeAmountOrRefParserRuleCall_1_0());
			}
			this_TimeAmountOrRef_2=ruleTimeAmountOrRef[$current]
			{
				$current = $this_TimeAmountOrRef_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getTimeoutFunctionAccess().getLeftParenthesisKeyword_1_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeoutFunctionRule());
					}
					newCompositeNode(grammarAccess.getTimeoutFunctionAccess().getTimeAmountOrRefParserRuleCall_1_1_1());
				}
				this_TimeAmountOrRef_4=ruleTimeAmountOrRef[$current]
				{
					$current = $this_TimeAmountOrRef_4.current;
					afterParserOrEnumRuleCall();
				}
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getTimeoutFunctionAccess().getRightParenthesisKeyword_1_1_2());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeoutFunctionAccess().getBodyStatementParserRuleCall_2_0());
				}
				lv_body_6_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeoutFunctionRule());
					}
					set(
						$current,
						"body",
						lv_body_6_0,
						"ru.iaie.reflexold.ReflexOld.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;


// Rule TimeAmountOrRef
ruleTimeAmountOrRef[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_time_0_0=RULE_INTEGER
				{
					newLeafNode(lv_time_0_0, grammarAccess.getTimeAmountOrRefAccess().getTimeINTEGERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeAmountOrRefRule());
					}
					setWithLastConsumed(
						$current,
						"time",
						lv_time_0_0,
						"ru.iaie.reflexold.ReflexOld.INTEGER");
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeAmountOrRefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getTimeAmountOrRefAccess().getRefIdReferenceCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='FUNCTION'
			{
				newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFUNCTIONKeyword_0_0());
			}
			    |
			otherlv_1='\u0424\u0423\u041D\u041A\u0426\u0418\u042F'
			{
				newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getCyrillicCapitalLetterEfCyrillicCapitalLetterUCyrillicCapitalLetterEnCyrillicCapitalLetterKaCyrillicCapitalLetterTseCyrillicCapitalLetterICyrillicCapitalLetterYaKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getReturnTypeTypeEnumRuleCall_1_0());
				}
				lv_returnType_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_2_0,
						"ru.iaie.reflexold.ReflexOld.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"ru.iaie.reflexold.ReflexOld.ID");
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getArgTypesTypeEnumRuleCall_4_0());
				}
				lv_argTypes_5_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					add(
						$current,
						"argTypes",
						lv_argTypes_5_0,
						"ru.iaie.reflexold.ReflexOld.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getArgTypesTypeEnumRuleCall_5_1_0());
					}
					lv_argTypes_7_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"argTypes",
							lv_argTypes_7_0,
							"ru.iaie.reflexold.ReflexOld.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6());
		}
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getFunctionAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleConst
entryRuleConst returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstRule()); }
	iv_ruleConst=ruleConst
	{ $current=$iv_ruleConst.current; }
	EOF;

// Rule Const
ruleConst returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='CONST'
			{
				newLeafNode(otherlv_0, grammarAccess.getConstAccess().getCONSTKeyword_0_0());
			}
			    |
			otherlv_1='\u041A\u041E\u041D\u0421\u0422'
			{
				newLeafNode(otherlv_1, grammarAccess.getConstAccess().getCyrillicCapitalLetterKaCyrillicCapitalLetterOCyrillicCapitalLetterEnCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_0_1());
			}
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getConstAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ru.iaie.reflexold.ReflexOld.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstAccess().getValueExpressionParserRuleCall_2_0());
				}
				lv_value_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"ru.iaie.reflexold.ReflexOld.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getConstAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleEnum
entryRuleEnum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumRule()); }
	iv_ruleEnum=ruleEnum
	{ $current=$iv_ruleEnum.current; }
	EOF;

// Rule Enum
ruleEnum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='ENUM'
			{
				newLeafNode(otherlv_0, grammarAccess.getEnumAccess().getENUMKeyword_0_0());
			}
			    |
			otherlv_1='\u041F\u0415\u0420\u0415\u0427\u0418\u0421\u041B\u0415\u041D\u0418\u0415'
			{
				newLeafNode(otherlv_1, grammarAccess.getEnumAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterIeCyrillicCapitalLetterErCyrillicCapitalLetterIeCyrillicCapitalLetterCheCyrillicCapitalLetterICyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterIeCyrillicCapitalLetterEnCyrillicCapitalLetterICyrillicCapitalLetterIeKeyword_0_1());
			}
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumAccess().getEnumMembersEnumMemberParserRuleCall_2_0());
				}
				lv_enumMembers_3_0=ruleEnumMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumRule());
					}
					add(
						$current,
						"enumMembers",
						lv_enumMembers_3_0,
						"ru.iaie.reflexold.ReflexOld.EnumMember");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumAccess().getEnumMembersEnumMemberParserRuleCall_3_1_0());
					}
					lv_enumMembers_5_0=ruleEnumMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumRule());
						}
						add(
							$current,
							"enumMembers",
							lv_enumMembers_5_0,
							"ru.iaie.reflexold.ReflexOld.EnumMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_4());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getEnumAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleEnumMember
entryRuleEnumMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumMemberRule()); }
	iv_ruleEnumMember=ruleEnumMember
	{ $current=$iv_ruleEnumMember.current; }
	EOF;

// Rule EnumMember
ruleEnumMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEnumMemberAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumMemberRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"ru.iaie.reflexold.ReflexOld.ID");
				}
			)
		)
		(
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getEnumMemberAccess().getEqualsSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumMemberAccess().getValueExpressionParserRuleCall_1_1_0());
					}
					lv_value_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumMemberRule());
						}
						set(
							$current,
							"value",
							lv_value_2_0,
							"ru.iaie.reflexold.ReflexOld.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementAction_0_0(),
						$current);
				}
			)
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_1());
		}
		this_CompoundStatement_2=ruleCompoundStatement
		{
			$current = $this_CompoundStatement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStartProcStatParserRuleCall_2());
		}
		this_StartProcStat_3=ruleStartProcStat
		{
			$current = $this_StartProcStat_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStopProcStatParserRuleCall_3());
		}
		this_StopProcStat_4=ruleStopProcStat
		{
			$current = $this_StopProcStat_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getErrorStatParserRuleCall_4());
		}
		this_ErrorStat_5=ruleErrorStat
		{
			$current = $this_ErrorStat_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getRestartStatParserRuleCall_5());
		}
		this_RestartStat_6=ruleRestartStat
		{
			$current = $this_RestartStat_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getResetStatParserRuleCall_6());
		}
		this_ResetStat_7=ruleResetStat
		{
			$current = $this_ResetStat_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLoopStatParserRuleCall_7());
		}
		this_LoopStat_8=ruleLoopStat
		{
			$current = $this_LoopStat_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSetStateStatParserRuleCall_8());
		}
		this_SetStateStat_9=ruleSetStateStat
		{
			$current = $this_SetStateStat_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfElseStatParserRuleCall_9());
		}
		this_IfElseStat_10=ruleIfElseStat
		{
			$current = $this_IfElseStat_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSwitchStatParserRuleCall_10());
		}
		this_SwitchStat_11=ruleSwitchStat
		{
			$current = $this_SwitchStat_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getStatementAccess().getExpressionParserRuleCall_11_0());
			}
			this_Expression_12=ruleExpression
			{
				$current = $this_Expression_12.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_13=';'
			{
				newLeafNode(otherlv_13, grammarAccess.getStatementAccess().getSemicolonKeyword_11_1());
			}
		)
	)
;

// Entry rule entryRuleStatementSequence
entryRuleStatementSequence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementSequenceRule()); }
	iv_ruleStatementSequence=ruleStatementSequence
	{ $current=$iv_ruleStatementSequence.current; }
	EOF;

// Rule StatementSequence
ruleStatementSequence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatementSequenceAccess().getStatementSequenceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementSequenceAccess().getStatementsStatementParserRuleCall_1_0());
				}
				lv_statements_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementSequenceRule());
					}
					add(
						$current,
						"statements",
						lv_statements_1_0,
						"ru.iaie.reflexold.ReflexOld.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleCompoundStatement
entryRuleCompoundStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompoundStatementRule()); }
	iv_ruleCompoundStatement=ruleCompoundStatement
	{ $current=$iv_ruleCompoundStatement.current; }
	EOF;

// Rule CompoundStatement
ruleCompoundStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompoundStatementAccess().getStatementsStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompoundStatementRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"ru.iaie.reflexold.ReflexOld.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleIfElseStat
entryRuleIfElseStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfElseStatRule()); }
	iv_ruleIfElseStat=ruleIfElseStat
	{ $current=$iv_ruleIfElseStat.current; }
	EOF;

// Rule IfElseStat
ruleIfElseStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='IF'
			{
				newLeafNode(otherlv_0, grammarAccess.getIfElseStatAccess().getIFKeyword_0_0());
			}
			    |
			otherlv_1='\u0415\u0421\u041B\u0418'
			{
				newLeafNode(otherlv_1, grammarAccess.getIfElseStatAccess().getCyrillicCapitalLetterIeCyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterIKeyword_0_1());
			}
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getIfElseStatAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfElseStatAccess().getCondExpressionParserRuleCall_2_0());
				}
				lv_cond_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfElseStatRule());
					}
					set(
						$current,
						"cond",
						lv_cond_3_0,
						"ru.iaie.reflexold.ReflexOld.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfElseStatAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfElseStatAccess().getThenStatementParserRuleCall_4_0());
				}
				lv_then_5_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfElseStatRule());
					}
					set(
						$current,
						"then",
						lv_then_5_0,
						"ru.iaie.reflexold.ReflexOld.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					'ELSE'
					    |
					'\u0418\u041D\u0410\u0427\u0415'
				)
				)=>
				(
					otherlv_6='ELSE'
					{
						newLeafNode(otherlv_6, grammarAccess.getIfElseStatAccess().getELSEKeyword_5_0_0_0());
					}
					    |
					otherlv_7='\u0418\u041D\u0410\u0427\u0415'
					{
						newLeafNode(otherlv_7, grammarAccess.getIfElseStatAccess().getCyrillicCapitalLetterICyrillicCapitalLetterEnCyrillicCapitalLetterACyrillicCapitalLetterCheCyrillicCapitalLetterIeKeyword_5_0_0_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfElseStatAccess().getElseStatementParserRuleCall_5_1_0());
					}
					lv_else_8_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfElseStatRule());
						}
						set(
							$current,
							"else",
							lv_else_8_0,
							"ru.iaie.reflexold.ReflexOld.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSwitchStat
entryRuleSwitchStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchStatRule()); }
	iv_ruleSwitchStat=ruleSwitchStat
	{ $current=$iv_ruleSwitchStat.current; }
	EOF;

// Rule SwitchStat
ruleSwitchStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='SWITCH'
			{
				newLeafNode(otherlv_0, grammarAccess.getSwitchStatAccess().getSWITCHKeyword_0_0());
			}
			    |
			otherlv_1='\u0420\u0410\u0417\u0411\u041E\u0420'
			{
				newLeafNode(otherlv_1, grammarAccess.getSwitchStatAccess().getCyrillicCapitalLetterErCyrillicCapitalLetterACyrillicCapitalLetterZeCyrillicCapitalLetterBeCyrillicCapitalLetterOCyrillicCapitalLetterErKeyword_0_1());
			}
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getSwitchStatAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStatAccess().getExprExpressionParserRuleCall_2_0());
				}
				lv_expr_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStatRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"ru.iaie.reflexold.ReflexOld.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getSwitchStatAccess().getRightParenthesisKeyword_3());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getSwitchStatAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStatAccess().getOptionsCaseStatParserRuleCall_5_0());
				}
				lv_options_6_0=ruleCaseStat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStatRule());
					}
					add(
						$current,
						"options",
						lv_options_6_0,
						"ru.iaie.reflexold.ReflexOld.CaseStat");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStatAccess().getDefaultOptionDefaultStatParserRuleCall_6_0());
				}
				lv_defaultOption_7_0=ruleDefaultStat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStatRule());
					}
					set(
						$current,
						"defaultOption",
						lv_defaultOption_7_0,
						"ru.iaie.reflexold.ReflexOld.DefaultStat");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getSwitchStatAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCaseStat
entryRuleCaseStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseStatRule()); }
	iv_ruleCaseStat=ruleCaseStat
	{ $current=$iv_ruleCaseStat.current; }
	EOF;

// Rule CaseStat
ruleCaseStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='CASE'
			{
				newLeafNode(otherlv_0, grammarAccess.getCaseStatAccess().getCASEKeyword_0_0());
			}
			    |
			otherlv_1='\u0421\u041B\u0423\u0427\u0410\u0419'
			{
				newLeafNode(otherlv_1, grammarAccess.getCaseStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterUCyrillicCapitalLetterCheCyrillicCapitalLetterACyrillicCapitalLetterShortIKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseStatAccess().getOptionExpressionParserRuleCall_1_0());
				}
				lv_option_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseStatRule());
					}
					set(
						$current,
						"option",
						lv_option_2_0,
						"ru.iaie.reflexold.ReflexOld.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getCaseStatAccess().getColonKeyword_2());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getCaseStatAccess().getLeftCurlyBracketKeyword_3());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getCaseStatRule());
			}
			newCompositeNode(grammarAccess.getCaseStatAccess().getSwitchOptionStatSequenceParserRuleCall_4());
		}
		this_SwitchOptionStatSequence_5=ruleSwitchOptionStatSequence[$current]
		{
			$current = $this_SwitchOptionStatSequence_5.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCaseStatAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDefaultStat
entryRuleDefaultStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefaultStatRule()); }
	iv_ruleDefaultStat=ruleDefaultStat
	{ $current=$iv_ruleDefaultStat.current; }
	EOF;

// Rule DefaultStat
ruleDefaultStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='DEFAULT'
			{
				newLeafNode(otherlv_0, grammarAccess.getDefaultStatAccess().getDEFAULTKeyword_0_0());
			}
			    |
			otherlv_1='\u0423\u041C\u041E\u041B\u0427\u0410\u041D\u0418\u0415'
			{
				newLeafNode(otherlv_1, grammarAccess.getDefaultStatAccess().getCyrillicCapitalLetterUCyrillicCapitalLetterEmCyrillicCapitalLetterOCyrillicCapitalLetterElCyrillicCapitalLetterCheCyrillicCapitalLetterACyrillicCapitalLetterEnCyrillicCapitalLetterICyrillicCapitalLetterIeKeyword_0_1());
			}
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDefaultStatAccess().getColonKeyword_1());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDefaultStatAccess().getLeftCurlyBracketKeyword_2());
		}
		{
			if ($current==null) {
				$current = createModelElement(grammarAccess.getDefaultStatRule());
			}
			newCompositeNode(grammarAccess.getDefaultStatAccess().getSwitchOptionStatSequenceParserRuleCall_3());
		}
		this_SwitchOptionStatSequence_4=ruleSwitchOptionStatSequence[$current]
		{
			$current = $this_SwitchOptionStatSequence_4.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDefaultStatAccess().getRightCurlyBracketKeyword_4());
		}
	)
;


// Rule SwitchOptionStatSequence
ruleSwitchOptionStatSequence[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchOptionStatSequenceAccess().getStatementsStatementParserRuleCall_0_0());
				}
				lv_statements_0_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchOptionStatSequenceRule());
					}
					add(
						$current,
						"statements",
						lv_statements_0_0,
						"ru.iaie.reflexold.ReflexOld.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchOptionStatSequenceAccess().getHasBreakBreakStatParserRuleCall_1_0());
				}
				lv_hasBreak_1_0=ruleBreakStat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchOptionStatSequenceRule());
					}
					set(
						$current,
						"hasBreak",
						lv_hasBreak_1_0 != null,
						"ru.iaie.reflexold.ReflexOld.BreakStat");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleBreakStat
entryRuleBreakStat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBreakStatRule()); }
	iv_ruleBreakStat=ruleBreakStat
	{ $current=$iv_ruleBreakStat.current.getText(); }
	EOF;

// Rule BreakStat
ruleBreakStat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='BREAK'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getBreakStatAccess().getBREAKKeyword_0_0());
			}
			    |
			kw='\u041A\u041E\u041D\u0415\u0426'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getBreakStatAccess().getCyrillicCapitalLetterKaCyrillicCapitalLetterOCyrillicCapitalLetterEnCyrillicCapitalLetterIeCyrillicCapitalLetterTseKeyword_0_1());
			}
		)
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBreakStatAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleStartProcStat
entryRuleStartProcStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartProcStatRule()); }
	iv_ruleStartProcStat=ruleStartProcStat
	{ $current=$iv_ruleStartProcStat.current; }
	EOF;

// Rule StartProcStat
ruleStartProcStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='START'
			{
				newLeafNode(otherlv_0, grammarAccess.getStartProcStatAccess().getSTARTKeyword_0_0());
			}
			    |
			otherlv_1='\u0421\u0422\u0410\u0420\u0422'
			{
				newLeafNode(otherlv_1, grammarAccess.getStartProcStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterErCyrillicCapitalLetterTeKeyword_0_1());
			}
		)
		(
			otherlv_2='PROC'
			{
				newLeafNode(otherlv_2, grammarAccess.getStartProcStatAccess().getPROCKeyword_1_0());
			}
			    |
			otherlv_3='\u041F\u0420\u041E\u0426'
			{
				newLeafNode(otherlv_3, grammarAccess.getStartProcStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartProcStatRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getStartProcStatAccess().getProcessProcessCrossReference_2_0());
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getStartProcStatAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleStopProcStat
entryRuleStopProcStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStopProcStatRule()); }
	iv_ruleStopProcStat=ruleStopProcStat
	{ $current=$iv_ruleStopProcStat.current; }
	EOF;

// Rule StopProcStat
ruleStopProcStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStopProcStatAccess().getStopProcStatAction_0(),
					$current);
			}
		)
		(
			otherlv_1='STOP'
			{
				newLeafNode(otherlv_1, grammarAccess.getStopProcStatAccess().getSTOPKeyword_1_0());
			}
			    |
			otherlv_2='\u0421\u0422\u041E\u041F'
			{
				newLeafNode(otherlv_2, grammarAccess.getStopProcStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterOCyrillicCapitalLetterPeKeyword_1_1());
			}
		)
		(
			(
				otherlv_3='PROC'
				{
					newLeafNode(otherlv_3, grammarAccess.getStopProcStatAccess().getPROCKeyword_2_0_0());
				}
				    |
				otherlv_4='\u041F\u0420\u041E\u0426'
				{
					newLeafNode(otherlv_4, grammarAccess.getStopProcStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_2_0_1());
				}
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStopProcStatRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getStopProcStatAccess().getProcessProcessCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getStopProcStatAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleErrorStat
entryRuleErrorStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getErrorStatRule()); }
	iv_ruleErrorStat=ruleErrorStat
	{ $current=$iv_ruleErrorStat.current; }
	EOF;

// Rule ErrorStat
ruleErrorStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getErrorStatAccess().getErrorStatAction_0(),
					$current);
			}
		)
		(
			otherlv_1='ERROR'
			{
				newLeafNode(otherlv_1, grammarAccess.getErrorStatAccess().getERRORKeyword_1_0());
			}
			    |
			otherlv_2='\u041E\u0428\u0418\u0411\u041A\u0410'
			{
				newLeafNode(otherlv_2, grammarAccess.getErrorStatAccess().getCyrillicCapitalLetterOCyrillicCapitalLetterShaCyrillicCapitalLetterICyrillicCapitalLetterBeCyrillicCapitalLetterKaCyrillicCapitalLetterAKeyword_1_1());
			}
		)
		(
			(
				otherlv_3='PROC'
				{
					newLeafNode(otherlv_3, grammarAccess.getErrorStatAccess().getPROCKeyword_2_0_0());
				}
				    |
				otherlv_4='\u041F\u0420\u041E\u0426'
				{
					newLeafNode(otherlv_4, grammarAccess.getErrorStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_2_0_1());
				}
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getErrorStatRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getErrorStatAccess().getProcessProcessCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getErrorStatAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleRestartStat
entryRuleRestartStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestartStatRule()); }
	iv_ruleRestartStat=ruleRestartStat
	{ $current=$iv_ruleRestartStat.current; }
	EOF;

// Rule RestartStat
ruleRestartStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRestartStatAccess().getRestartStatAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='RESTART'
				{
					newLeafNode(otherlv_1, grammarAccess.getRestartStatAccess().getRESTARTKeyword_1_0_0());
				}
				otherlv_2='PROC'
				{
					newLeafNode(otherlv_2, grammarAccess.getRestartStatAccess().getPROCKeyword_1_0_1());
				}
			)
			    |
			(
				otherlv_3='\u0420\u0415\u0421\u0422\u0410\u0420\u0422'
				{
					newLeafNode(otherlv_3, grammarAccess.getRestartStatAccess().getCyrillicCapitalLetterErCyrillicCapitalLetterIeCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterErCyrillicCapitalLetterTeKeyword_1_1_0());
				}
				otherlv_4='\u041F\u0420\u041E\u0426'
				{
					newLeafNode(otherlv_4, grammarAccess.getRestartStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1_1());
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getRestartStatAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleResetStat
entryRuleResetStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResetStatRule()); }
	iv_ruleResetStat=ruleResetStat
	{ $current=$iv_ruleResetStat.current; }
	EOF;

// Rule ResetStat
ruleResetStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getResetStatAccess().getResetStatAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='RESTART'
				{
					newLeafNode(otherlv_1, grammarAccess.getResetStatAccess().getRESTARTKeyword_1_0_0());
				}
				otherlv_2='TIMER'
				{
					newLeafNode(otherlv_2, grammarAccess.getResetStatAccess().getTIMERKeyword_1_0_1());
				}
			)
			    |
			(
				otherlv_3='\u0420\u0415\u0421\u0422\u0410\u0420\u0422'
				{
					newLeafNode(otherlv_3, grammarAccess.getResetStatAccess().getCyrillicCapitalLetterErCyrillicCapitalLetterIeCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterErCyrillicCapitalLetterTeKeyword_1_1_0());
				}
				otherlv_4='\u0422\u0410\u0419\u041C\u0415\u0420'
				{
					newLeafNode(otherlv_4, grammarAccess.getResetStatAccess().getCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterShortICyrillicCapitalLetterEmCyrillicCapitalLetterIeCyrillicCapitalLetterErKeyword_1_1_1());
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getResetStatAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleLoopStat
entryRuleLoopStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopStatRule()); }
	iv_ruleLoopStat=ruleLoopStat
	{ $current=$iv_ruleLoopStat.current; }
	EOF;

// Rule LoopStat
ruleLoopStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoopStatAccess().getLoopStatAction_0(),
					$current);
			}
		)
		(
			otherlv_1='LOOP'
			{
				newLeafNode(otherlv_1, grammarAccess.getLoopStatAccess().getLOOPKeyword_1_0());
			}
			    |
			otherlv_2='\u0417\u0410\u0426\u0418\u041A\u041B\u0418\u0422\u042C'
			{
				newLeafNode(otherlv_2, grammarAccess.getLoopStatAccess().getCyrillicCapitalLetterZeCyrillicCapitalLetterACyrillicCapitalLetterTseCyrillicCapitalLetterICyrillicCapitalLetterKaCyrillicCapitalLetterElCyrillicCapitalLetterICyrillicCapitalLetterTeCyrillicCapitalLetterSoftSignKeyword_1_1());
			}
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getLoopStatAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleSetStateStat
entryRuleSetStateStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetStateStatRule()); }
	iv_ruleSetStateStat=ruleSetStateStat
	{ $current=$iv_ruleSetStateStat.current; }
	EOF;

// Rule SetStateStat
ruleSetStateStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSetStateStatAccess().getSetStateStatAction_0(),
					$current);
			}
		)
		(
			otherlv_1='SET'
			{
				newLeafNode(otherlv_1, grammarAccess.getSetStateStatAccess().getSETKeyword_1_0());
			}
			    |
			otherlv_2='\u0412'
			{
				newLeafNode(otherlv_2, grammarAccess.getSetStateStatAccess().getCyrillicCapitalLetterVeKeyword_1_1());
			}
		)
		(
			(
				(
					(
						lv_next_3_1='NEXT'
						{
							newLeafNode(lv_next_3_1, grammarAccess.getSetStateStatAccess().getNextNEXTKeyword_2_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSetStateStatRule());
							}
							setWithLastConsumed($current, "next", lv_next_3_1 != null, null);
						}
						    |
						lv_next_3_2='\u0421\u041B\u0415\u0414\u0423\u042E\u0429\u0415\u0415'
						{
							newLeafNode(lv_next_3_2, grammarAccess.getSetStateStatAccess().getNextCyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterIeCyrillicCapitalLetterDeCyrillicCapitalLetterUCyrillicCapitalLetterYuCyrillicCapitalLetterShchaCyrillicCapitalLetterIeCyrillicCapitalLetterIeKeyword_2_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSetStateStatRule());
							}
							setWithLastConsumed($current, "next", lv_next_3_2 != null, null);
						}
					)
				)
			)
			    |
			(
				(
					otherlv_4='STATE'
					{
						newLeafNode(otherlv_4, grammarAccess.getSetStateStatAccess().getSTATEKeyword_2_1_0_0());
					}
					    |
					otherlv_5='\u0421\u041E\u0421\u0422'
					{
						newLeafNode(otherlv_5, grammarAccess.getSetStateStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterOCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_2_1_0_1());
					}
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSetStateStatRule());
							}
						}
						otherlv_6=RULE_ID
						{
							newLeafNode(otherlv_6, grammarAccess.getSetStateStatAccess().getStateStateCrossReference_2_1_1_0());
						}
					)
				)
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getSetStateStatAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleInfixOp
entryRuleInfixOp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInfixOpRule()); }
	iv_ruleInfixOp=ruleInfixOp
	{ $current=$iv_ruleInfixOp.current; }
	EOF;

// Rule InfixOp
ruleInfixOp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInfixOpAccess().getOpInfixPostfixOpEnumRuleCall_0_0());
				}
				lv_op_0_0=ruleInfixPostfixOp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInfixOpRule());
					}
					set(
						$current,
						"op",
						lv_op_0_0,
						"ru.iaie.reflexold.ReflexOld.InfixPostfixOp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInfixOpRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getInfixOpAccess().getRefIdReferenceCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRulePostfixOp
entryRulePostfixOp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostfixOpRule()); }
	iv_rulePostfixOp=rulePostfixOp
	{ $current=$iv_rulePostfixOp.current; }
	EOF;

// Rule PostfixOp
rulePostfixOp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPostfixOpRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getPostfixOpAccess().getRefIdReferenceCrossReference_0_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPostfixOpAccess().getOpInfixPostfixOpEnumRuleCall_1_0());
				}
				lv_op_1_0=ruleInfixPostfixOp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostfixOpRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"ru.iaie.reflexold.ReflexOld.InfixPostfixOp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionCallRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getFunctionFunctionCrossReference_0_0());
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"ru.iaie.reflexold.ReflexOld.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"ru.iaie.reflexold.ReflexOld.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleCheckStateExpression
entryRuleCheckStateExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckStateExpressionRule()); }
	iv_ruleCheckStateExpression=ruleCheckStateExpression
	{ $current=$iv_ruleCheckStateExpression.current; }
	EOF;

// Rule CheckStateExpression
ruleCheckStateExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='PROC'
			{
				newLeafNode(otherlv_0, grammarAccess.getCheckStateExpressionAccess().getPROCKeyword_0_0());
			}
			    |
			otherlv_1='\u041F\u0420\u041E\u0426'
			{
				newLeafNode(otherlv_1, grammarAccess.getCheckStateExpressionAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_0_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckStateExpressionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getCheckStateExpressionAccess().getProcessProcessCrossReference_1_0());
				}
			)
		)
		(
			(
				otherlv_3='IN'
				{
					newLeafNode(otherlv_3, grammarAccess.getCheckStateExpressionAccess().getINKeyword_2_0_0());
				}
				otherlv_4='STATE'
				{
					newLeafNode(otherlv_4, grammarAccess.getCheckStateExpressionAccess().getSTATEKeyword_2_0_1());
				}
			)
			    |
			(
				otherlv_5='\u0412'
				{
					newLeafNode(otherlv_5, grammarAccess.getCheckStateExpressionAccess().getCyrillicCapitalLetterVeKeyword_2_1_0());
				}
				otherlv_6='\u0421\u041E\u0421\u0422'
				{
					newLeafNode(otherlv_6, grammarAccess.getCheckStateExpressionAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterOCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_2_1_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckStateExpressionAccess().getQualfierStateQualifierEnumRuleCall_3_0());
				}
				lv_qualfier_7_0=ruleStateQualifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckStateExpressionRule());
					}
					set(
						$current,
						"qualfier",
						lv_qualfier_7_0,
						"ru.iaie.reflexold.ReflexOld.StateQualifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getReferenceIdReferenceCrossReference_0_0());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_integer_2_0=RULE_INTEGER
					{
						newLeafNode(lv_integer_2_0, grammarAccess.getPrimaryExpressionAccess().getIntegerINTEGERTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"integer",
							lv_integer_2_0,
							"ru.iaie.reflexold.ReflexOld.INTEGER");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_floating_4_0=RULE_FLOAT
					{
						newLeafNode(lv_floating_4_0, grammarAccess.getPrimaryExpressionAccess().getFloatingFLOATTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"floating",
							lv_floating_4_0,
							"ru.iaie.reflexold.ReflexOld.FLOAT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_bool_6_0=RULE_BOOL_LITERAL
					{
						newLeafNode(lv_bool_6_0, grammarAccess.getPrimaryExpressionAccess().getBoolBOOL_LITERALTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"bool",
							lv_bool_6_0,
							"ru.iaie.reflexold.ReflexOld.BOOL_LITERAL");
					}
				)
			)
		)
		    |
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNestedExprExpressionParserRuleCall_4_1_0());
					}
					lv_nestedExpr_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"nestedExpr",
							lv_nestedExpr_8_0,
							"ru.iaie.reflexold.ReflexOld.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_2());
			}
		)
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=rulePrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getFunctionCallParserRuleCall_1());
		}
		this_FunctionCall_1=ruleFunctionCall
		{
			$current = $this_FunctionCall_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPostfixOpParserRuleCall_2());
		}
		this_PostfixOp_2=rulePostfixOp
		{
			$current = $this_PostfixOp_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getInfixOpParserRuleCall_3());
		}
		this_InfixOp_3=ruleInfixOp
		{
			$current = $this_InfixOp_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getUnaryOpUnaryOpEnumRuleCall_4_0_0());
					}
					lv_unaryOp_4_0=ruleUnaryOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						set(
							$current,
							"unaryOp",
							lv_unaryOp_4_0,
							"ru.iaie.reflexold.ReflexOld.UnaryOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getRightCastExpressionParserRuleCall_4_1_0());
					}
					lv_right_5_0=ruleCastExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"ru.iaie.reflexold.ReflexOld.CastExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCastExpression
entryRuleCastExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCastExpressionRule()); }
	iv_ruleCastExpression=ruleCastExpression
	{ $current=$iv_ruleCastExpression.current; }
	EOF;

// Rule CastExpression
ruleCastExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCastExpressionAccess().getUnaryExpressionParserRuleCall_0());
		}
		this_UnaryExpression_0=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCastExpressionAccess().getTypeTypeEnumRuleCall_1_1_0());
					}
					lv_type_2_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCastExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"ru.iaie.reflexold.ReflexOld.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCastExpressionAccess().getRightCastExpressionParserRuleCall_1_3_0());
					}
					lv_right_4_0=ruleCastExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCastExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_4_0,
							"ru.iaie.reflexold.ReflexOld.CastExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getCastExpressionParserRuleCall_0());
		}
		this_CastExpression_0=ruleCastExpression
		{
			$current = $this_CastExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getMulOpMultiplicativeOpEnumRuleCall_1_1_0());
					}
					lv_mulOp_2_0=ruleMultiplicativeOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"mulOp",
							lv_mulOp_2_0,
							"ru.iaie.reflexold.ReflexOld.MultiplicativeOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightCastExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleCastExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"ru.iaie.reflexold.ReflexOld.CastExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
		}
		this_MultiplicativeExpression_0=ruleMultiplicativeExpression
		{
			$current = $this_MultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getAddOpAdditiveOpEnumRuleCall_1_1_0());
					}
					lv_addOp_2_0=ruleAdditiveOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"addOp",
							lv_addOp_2_0,
							"ru.iaie.reflexold.ReflexOld.AdditiveOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"ru.iaie.reflexold.ReflexOld.AdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleShiftExpression
entryRuleShiftExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShiftExpressionRule()); }
	iv_ruleShiftExpression=ruleShiftExpression
	{ $current=$iv_ruleShiftExpression.current; }
	EOF;

// Rule ShiftExpression
ruleShiftExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0());
		}
		this_AdditiveExpression_0=ruleAdditiveExpression
		{
			$current = $this_AdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getShiftExpressionAccess().getShiftExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getShiftExpressionAccess().getShiftOpShiftOpEnumRuleCall_1_1_0());
					}
					lv_shiftOp_2_0=ruleShiftOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
						}
						set(
							$current,
							"shiftOp",
							lv_shiftOp_2_0,
							"ru.iaie.reflexold.ReflexOld.ShiftOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getShiftExpressionAccess().getRightShiftExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleShiftExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"ru.iaie.reflexold.ReflexOld.ShiftExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCompareExpression
entryRuleCompareExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareExpressionRule()); }
	iv_ruleCompareExpression=ruleCompareExpression
	{ $current=$iv_ruleCompareExpression.current; }
	EOF;

// Rule CompareExpression
ruleCompareExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCompareExpressionAccess().getCheckStateExpressionParserRuleCall_0());
		}
		this_CheckStateExpression_0=ruleCheckStateExpression
		{
			$current = $this_CheckStateExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getCompareExpressionAccess().getShiftExpressionParserRuleCall_1_0());
			}
			this_ShiftExpression_1=ruleShiftExpression
			{
				$current = $this_ShiftExpression_1.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getCompareExpressionAccess().getCompareExpressionLeftAction_1_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCompareExpressionAccess().getCmpOpCompareOpEnumRuleCall_1_1_1_0());
						}
						lv_cmpOp_3_0=ruleCompareOp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
							}
							set(
								$current,
								"cmpOp",
								lv_cmpOp_3_0,
								"ru.iaie.reflexold.ReflexOld.CompareOp");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCompareExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_2_0());
						}
						lv_right_4_0=ruleCompareExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_4_0,
								"ru.iaie.reflexold.ReflexOld.CompareExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getCompareExpressionParserRuleCall_0());
		}
		this_CompareExpression_0=ruleCompareExpression
		{
			$current = $this_CompareExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getEqCmpOpCompareEqOpEnumRuleCall_1_1_0());
					}
					lv_eqCmpOp_2_0=ruleCompareEqOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"eqCmpOp",
							lv_eqCmpOp_2_0,
							"ru.iaie.reflexold.ReflexOld.CompareEqOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"ru.iaie.reflexold.ReflexOld.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleBitAndExpression
entryRuleBitAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitAndExpressionRule()); }
	iv_ruleBitAndExpression=ruleBitAndExpression
	{ $current=$iv_ruleBitAndExpression.current; }
	EOF;

// Rule BitAndExpression
ruleBitAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBitAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getBitAndExpressionAccess().getBitAndExpressionLeftAction_1_0(),
						$current);
				}
			)
			this_BIT_AND_2=RULE_BIT_AND
			{
				newLeafNode(this_BIT_AND_2, grammarAccess.getBitAndExpressionAccess().getBIT_ANDTerminalRuleCall_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBitAndExpressionAccess().getRightBitAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleBitAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBitAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"ru.iaie.reflexold.ReflexOld.BitAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleBitXorExpression
entryRuleBitXorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitXorExpressionRule()); }
	iv_ruleBitXorExpression=ruleBitXorExpression
	{ $current=$iv_ruleBitXorExpression.current; }
	EOF;

// Rule BitXorExpression
ruleBitXorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBitXorExpressionAccess().getBitAndExpressionParserRuleCall_0());
		}
		this_BitAndExpression_0=ruleBitAndExpression
		{
			$current = $this_BitAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getBitXorExpressionAccess().getBitXorExpressionLeftAction_1_0(),
						$current);
				}
			)
			this_BIT_XOR_2=RULE_BIT_XOR
			{
				newLeafNode(this_BIT_XOR_2, grammarAccess.getBitXorExpressionAccess().getBIT_XORTerminalRuleCall_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBitXorExpressionAccess().getRightBitXorExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleBitXorExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBitXorExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"ru.iaie.reflexold.ReflexOld.BitXorExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleBitOrExpression
entryRuleBitOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitOrExpressionRule()); }
	iv_ruleBitOrExpression=ruleBitOrExpression
	{ $current=$iv_ruleBitOrExpression.current; }
	EOF;

// Rule BitOrExpression
ruleBitOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBitOrExpressionAccess().getBitXorExpressionParserRuleCall_0());
		}
		this_BitXorExpression_0=ruleBitXorExpression
		{
			$current = $this_BitXorExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getBitOrExpressionAccess().getBitOrExpressionLeftAction_1_0(),
						$current);
				}
			)
			this_BIT_OR_2=RULE_BIT_OR
			{
				newLeafNode(this_BIT_OR_2, grammarAccess.getBitOrExpressionAccess().getBIT_ORTerminalRuleCall_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBitOrExpressionAccess().getRightBitOrExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleBitOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBitOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"ru.iaie.reflexold.ReflexOld.BitOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); }
	iv_ruleLogicalAndExpression=ruleLogicalAndExpression
	{ $current=$iv_ruleLogicalAndExpression.current; }
	EOF;

// Rule LogicalAndExpression
ruleLogicalAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitOrExpressionParserRuleCall_0());
		}
		this_BitOrExpression_0=ruleBitOrExpression
		{
			$current = $this_BitOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionLeftAction_1_0(),
						$current);
				}
			)
			this_LOGICAL_AND_2=RULE_LOGICAL_AND
			{
				newLeafNode(this_LOGICAL_AND_2, grammarAccess.getLogicalAndExpressionAccess().getLOGICAL_ANDTerminalRuleCall_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleLogicalAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"ru.iaie.reflexold.ReflexOld.LogicalAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); }
	iv_ruleLogicalOrExpression=ruleLogicalOrExpression
	{ $current=$iv_ruleLogicalOrExpression.current; }
	EOF;

// Rule LogicalOrExpression
ruleLogicalOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
		}
		this_LogicalAndExpression_0=ruleLogicalAndExpression
		{
			$current = $this_LogicalAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionLeftAction_1_0(),
						$current);
				}
			)
			this_LOGICAL_OR_2=RULE_LOGICAL_OR
			{
				newLeafNode(this_LOGICAL_OR_2, grammarAccess.getLogicalOrExpressionAccess().getLOGICAL_ORTerminalRuleCall_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalOrExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleLogicalOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"ru.iaie.reflexold.ReflexOld.LogicalOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentExpressionRule()); }
	iv_ruleAssignmentExpression=ruleAssignmentExpression
	{ $current=$iv_ruleAssignmentExpression.current; }
	EOF;

// Rule AssignmentExpression
ruleAssignmentExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignmentExpressionRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getAssignmentExpressionAccess().getAssignVarIdReferenceCrossReference_0_0_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAssignOpAssignOperatorEnumRuleCall_0_1_0());
					}
					lv_assignOp_1_0=ruleAssignOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
						}
						set(
							$current,
							"assignOp",
							lv_assignOp_1_0,
							"ru.iaie.reflexold.ReflexOld.AssignOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getExprLogicalOrExpressionParserRuleCall_1_0());
				}
				lv_expr_2_0=ruleLogicalOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"ru.iaie.reflexold.ReflexOld.LogicalOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall());
	}
	this_AssignmentExpression_0=ruleAssignmentExpression
	{
		$current = $this_AssignmentExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Rule PortType
rulePortType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='INPUT'
			{
				$current = grammarAccess.getPortTypeAccess().getINPUT_ENEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPortTypeAccess().getINPUT_ENEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='\u0412\u0425\u041E\u0414'
			{
				$current = grammarAccess.getPortTypeAccess().getINPUT_RUEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPortTypeAccess().getINPUT_RUEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='OUTPUT'
			{
				$current = grammarAccess.getPortTypeAccess().getOUTPUT_ENEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPortTypeAccess().getOUTPUT_ENEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='\u0412\u042B\u0425\u041E\u0414'
			{
				$current = grammarAccess.getPortTypeAccess().getOUTPUT_RUEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPortTypeAccess().getOUTPUT_RUEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule StateQualifier
ruleStateQualifier returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ACTIVE'
			{
				$current = grammarAccess.getStateQualifierAccess().getACTIVE_ENEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getStateQualifierAccess().getACTIVE_ENEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='\u0410\u041A\u0422\u0418\u0412\u041D\u041E\u0415'
			{
				$current = grammarAccess.getStateQualifierAccess().getACTIVE_RUEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getStateQualifierAccess().getACTIVE_RUEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='PASSIVE'
			{
				$current = grammarAccess.getStateQualifierAccess().getPASSIVE_ENEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getStateQualifierAccess().getPASSIVE_ENEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='\u041F\u0410\u0421\u0421\u0418\u0412\u041D\u041E\u0415'
			{
				$current = grammarAccess.getStateQualifierAccess().getPASSIVE_RUEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getStateQualifierAccess().getPASSIVE_RUEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='STOP'
			{
				$current = grammarAccess.getStateQualifierAccess().getSTOP_ENEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getStateQualifierAccess().getSTOP_ENEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='\u0421\u0422\u041E\u041F'
			{
				$current = grammarAccess.getStateQualifierAccess().getSTOP_RUEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getStateQualifierAccess().getSTOP_RUEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='ERROR'
			{
				$current = grammarAccess.getStateQualifierAccess().getERROR_ENEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getStateQualifierAccess().getERROR_ENEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='\u041E\u0428\u0418\u0411\u041A\u0410'
			{
				$current = grammarAccess.getStateQualifierAccess().getERROR_RUEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getStateQualifierAccess().getERROR_RUEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule InfixPostfixOp
ruleInfixPostfixOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='++'
			{
				$current = grammarAccess.getInfixPostfixOpAccess().getINCEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getInfixPostfixOpAccess().getINCEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='--'
			{
				$current = grammarAccess.getInfixPostfixOpAccess().getDECEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getInfixPostfixOpAccess().getDECEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule AssignOperator
ruleAssignOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='*='
			{
				$current = grammarAccess.getAssignOperatorAccess().getMULEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAssignOperatorAccess().getMULEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='/='
			{
				$current = grammarAccess.getAssignOperatorAccess().getDIVEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAssignOperatorAccess().getDIVEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='+='
			{
				$current = grammarAccess.getAssignOperatorAccess().getMODEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAssignOperatorAccess().getMODEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='-='
			{
				$current = grammarAccess.getAssignOperatorAccess().getSUBEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getAssignOperatorAccess().getSUBEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='<<='
			{
				$current = grammarAccess.getAssignOperatorAccess().getCINEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getAssignOperatorAccess().getCINEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='>>='
			{
				$current = grammarAccess.getAssignOperatorAccess().getCOUTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getAssignOperatorAccess().getCOUTEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='&='
			{
				$current = grammarAccess.getAssignOperatorAccess().getBIT_ANDEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getAssignOperatorAccess().getBIT_ANDEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='^='
			{
				$current = grammarAccess.getAssignOperatorAccess().getBIT_XOREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getAssignOperatorAccess().getBIT_XOREnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='|='
			{
				$current = grammarAccess.getAssignOperatorAccess().getBIT_OREnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getAssignOperatorAccess().getBIT_OREnumLiteralDeclaration_9());
			}
		)
	)
;

// Rule UnaryOp
ruleUnaryOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='+'
			{
				$current = grammarAccess.getUnaryOpAccess().getPLUSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnaryOpAccess().getPLUSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getUnaryOpAccess().getMINUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnaryOpAccess().getMINUSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='~'
			{
				$current = grammarAccess.getUnaryOpAccess().getBIT_NOTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnaryOpAccess().getBIT_NOTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='!'
			{
				$current = grammarAccess.getUnaryOpAccess().getLOGICAL_NOTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getUnaryOpAccess().getLOGICAL_NOTEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule CompareOp
ruleCompareOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<'
			{
				$current = grammarAccess.getCompareOpAccess().getLESSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCompareOpAccess().getLESSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='>'
			{
				$current = grammarAccess.getCompareOpAccess().getGREATEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCompareOpAccess().getGREATEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='<='
			{
				$current = grammarAccess.getCompareOpAccess().getLESS_EQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCompareOpAccess().getLESS_EQEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='>='
			{
				$current = grammarAccess.getCompareOpAccess().getGREATER_EQEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCompareOpAccess().getGREATER_EQEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule CompareEqOp
ruleCompareEqOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='=='
			{
				$current = grammarAccess.getCompareEqOpAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCompareEqOpAccess().getEQEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='!='
			{
				$current = grammarAccess.getCompareEqOpAccess().getNOT_EQEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCompareEqOpAccess().getNOT_EQEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ShiftOp
ruleShiftOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='>>'
			{
				$current = grammarAccess.getShiftOpAccess().getLEFT_SHIFTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getShiftOpAccess().getLEFT_SHIFTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<<'
			{
				$current = grammarAccess.getShiftOpAccess().getRIGHT_SHIFTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getShiftOpAccess().getRIGHT_SHIFTEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule AdditiveOp
ruleAdditiveOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='+'
			{
				$current = grammarAccess.getAdditiveOpAccess().getPLUSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAdditiveOpAccess().getPLUSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getAdditiveOpAccess().getMINUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAdditiveOpAccess().getMINUSEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule MultiplicativeOp
ruleMultiplicativeOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='*'
			{
				$current = grammarAccess.getMultiplicativeOpAccess().getMULEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMultiplicativeOpAccess().getMULEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='/'
			{
				$current = grammarAccess.getMultiplicativeOpAccess().getDIVEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMultiplicativeOpAccess().getDIVEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='%'
			{
				$current = grammarAccess.getMultiplicativeOpAccess().getMODEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMultiplicativeOpAccess().getMODEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Type
ruleType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='VOID'
			{
				$current = grammarAccess.getTypeAccess().getVOID_ENEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeAccess().getVOID_ENEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='\u041F\u0423\u0421\u0422\u041E'
			{
				$current = grammarAccess.getTypeAccess().getVOID_RUEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeAccess().getVOID_RUEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='FLOAT'
			{
				$current = grammarAccess.getTypeAccess().getFLOAT_ENEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeAccess().getFLOAT_ENEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='\u041F\u041B\u0410\u0412'
			{
				$current = grammarAccess.getTypeAccess().getFLOAT_RUEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTypeAccess().getFLOAT_RUEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='DOUBLE'
			{
				$current = grammarAccess.getTypeAccess().getDOUBLE_ENEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTypeAccess().getDOUBLE_ENEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='\u0414\u041F\u041B\u0410\u0412'
			{
				$current = grammarAccess.getTypeAccess().getDOUBLE_RUEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTypeAccess().getDOUBLE_RUEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='SHORT'
			{
				$current = grammarAccess.getTypeAccess().getSHORT_ENEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getTypeAccess().getSHORT_ENEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='\u041A\u0426\u0415\u041B'
			{
				$current = grammarAccess.getTypeAccess().getSHORT_RUEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getTypeAccess().getSHORT_RUEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='UNSIGNED SHORT'
			{
				$current = grammarAccess.getTypeAccess().getUSHORT_ENEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getTypeAccess().getUSHORT_ENEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='\u0411\u0415\u0417\u0417\u041D\u0410\u041A\u041E\u0412\u041E\u0415 \u041A\u0426\u0415\u041B'
			{
				$current = grammarAccess.getTypeAccess().getUSHORT_RUEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getTypeAccess().getUSHORT_RUEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='INT'
			{
				$current = grammarAccess.getTypeAccess().getINT_ENEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getTypeAccess().getINT_ENEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='\u0426\u0415\u041B'
			{
				$current = grammarAccess.getTypeAccess().getINT_RUEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getTypeAccess().getINT_RUEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='UNSIGNED INT'
			{
				$current = grammarAccess.getTypeAccess().getUINT_ENEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getTypeAccess().getUINT_ENEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='\u0411\u0415\u0417\u0417\u041D\u0410\u041A\u041E\u0412\u041E\u0415 \u0426\u0415\u041B'
			{
				$current = grammarAccess.getTypeAccess().getUINT_RUEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getTypeAccess().getUINT_RUEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='LONG'
			{
				$current = grammarAccess.getTypeAccess().getLONG_ENEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getTypeAccess().getLONG_ENEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='\u0414\u0426\u0415\u041B'
			{
				$current = grammarAccess.getTypeAccess().getLONG_RUEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getTypeAccess().getLONG_RUEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='UNSIGNED LONG'
			{
				$current = grammarAccess.getTypeAccess().getULONG_ENEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getTypeAccess().getULONG_ENEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17='\u0411\u0415\u0417\u0417\u041D\u0410\u041A\u041E\u0412\u041E\u0415 \u0414\u0426\u0415\u041B'
			{
				$current = grammarAccess.getTypeAccess().getULONG_RUEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getTypeAccess().getULONG_RUEnumLiteralDeclaration_17());
			}
		)
		    |
		(
			enumLiteral_18='LOG'
			{
				$current = grammarAccess.getTypeAccess().getBOOL_ENEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_18, grammarAccess.getTypeAccess().getBOOL_ENEnumLiteralDeclaration_18());
			}
		)
		    |
		(
			enumLiteral_19='\u041B\u041E\u0413'
			{
				$current = grammarAccess.getTypeAccess().getBOOL_RUEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_19, grammarAccess.getTypeAccess().getBOOL_RUEnumLiteralDeclaration_19());
			}
		)
	)
;

RULE_LOGICAL_OR : '||';

RULE_LOGICAL_AND : '&&';

RULE_BIT_OR : '|';

RULE_BIT_XOR : '^';

RULE_BIT_AND : '&';

RULE_INTEGER : RULE_SIGN? (RULE_HEX|RULE_OCTAL|RULE_DECIMAL) (RULE_LONG|RULE_UNSIGNED)?;

RULE_FLOAT : (RULE_DEC_FLOAT|RULE_HEX_FLOAT);

fragment RULE_DEC_FLOAT : RULE_DEC_SEQUENCE? '.' RULE_DEC_SEQUENCE (RULE_EXPONENT RULE_SIGN RULE_DEC_SEQUENCE)? (RULE_LONG|RULE_FLOAT_SUFFIX)?;

fragment RULE_HEX_FLOAT : RULE_HEX_SEQUENCE? '.' RULE_HEX_SEQUENCE (RULE_BIN_EXPONENT RULE_SIGN RULE_DEC_SEQUENCE)? (RULE_LONG|RULE_FLOAT_SUFFIX)?;

fragment RULE_DEC_SEQUENCE : ('0'..'9')+;

fragment RULE_HEX_SEQUENCE : ('0'..'9'|'a'..'f'|'A'..'F')+;

fragment RULE_BIN_EXPONENT : ('p'|'P');

fragment RULE_EXPONENT : ('e'|'E');

fragment RULE_SIGN : ('+'|'-');

fragment RULE_DECIMAL : ('0'|'1'..'9' ('0'..'9')*);

fragment RULE_OCTAL : '0' ('0'..'7')+;

fragment RULE_HEX : RULE_HEX_PREFIX RULE_HEX_SEQUENCE;

fragment RULE_HEX_PREFIX : '0' ('x'|'X');

fragment RULE_LONG : ('L'|'l');

fragment RULE_FLOAT_SUFFIX : ('F'|'f');

fragment RULE_UNSIGNED : ('U'|'u');

RULE_BOOL_LITERAL : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'\u0430'..'\u044F'|'\u0410'..'\u042F'|'_') ('a'..'z'|'A'..'Z'|'\u0430'..'\u044F'|'\u0410'..'\u042F'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

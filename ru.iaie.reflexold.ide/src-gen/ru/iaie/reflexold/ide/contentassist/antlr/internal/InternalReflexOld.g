/*
 * generated by Xtext 2.25.0
 */
grammar InternalReflexOld;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package ru.iaie.reflexold.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ru.iaie.reflexold.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ru.iaie.reflexold.services.ReflexOldGrammarAccess;

}
@parser::members {
	private ReflexOldGrammarAccess grammarAccess;

	public void setGrammarAccess(ReflexOldGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClockDefinition
entryRuleClockDefinition
:
{ before(grammarAccess.getClockDefinitionRule()); }
	 ruleClockDefinition
{ after(grammarAccess.getClockDefinitionRule()); } 
	 EOF 
;

// Rule ClockDefinition
ruleClockDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClockDefinitionAccess().getGroup()); }
		(rule__ClockDefinition__Group__0)
		{ after(grammarAccess.getClockDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcess
entryRuleProcess
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessAccess().getGroup()); }
		(rule__Process__Group__0)
		{ after(grammarAccess.getProcessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportedVariableList
entryRuleImportedVariableList
:
{ before(grammarAccess.getImportedVariableListRule()); }
	 ruleImportedVariableList
{ after(grammarAccess.getImportedVariableListRule()); } 
	 EOF 
;

// Rule ImportedVariableList
ruleImportedVariableList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportedVariableListAccess().getGroup()); }
		(rule__ImportedVariableList__Group__0)
		{ after(grammarAccess.getImportedVariableListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessVariable
entryRuleProcessVariable
:
{ before(grammarAccess.getProcessVariableRule()); }
	 ruleProcessVariable
{ after(grammarAccess.getProcessVariableRule()); } 
	 EOF 
;

// Rule ProcessVariable
ruleProcessVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessVariableAccess().getGroup()); }
		(rule__ProcessVariable__Group__0)
		{ after(grammarAccess.getProcessVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePhysicalVariable
entryRulePhysicalVariable
:
{ before(grammarAccess.getPhysicalVariableRule()); }
	 rulePhysicalVariable
{ after(grammarAccess.getPhysicalVariableRule()); } 
	 EOF 
;

// Rule PhysicalVariable
rulePhysicalVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPhysicalVariableAccess().getGroup()); }
		(rule__PhysicalVariable__Group__0)
		{ after(grammarAccess.getPhysicalVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePortMapping
entryRulePortMapping
:
{ before(grammarAccess.getPortMappingRule()); }
	 rulePortMapping
{ after(grammarAccess.getPortMappingRule()); } 
	 EOF 
;

// Rule PortMapping
rulePortMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortMappingAccess().getGroup()); }
		(rule__PortMapping__Group__0)
		{ after(grammarAccess.getPortMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePort
entryRulePort
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortAccess().getGroup()); }
		(rule__Port__Group__0)
		{ after(grammarAccess.getPortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProgramVariable
entryRuleProgramVariable
:
{ before(grammarAccess.getProgramVariableRule()); }
	 ruleProgramVariable
{ after(grammarAccess.getProgramVariableRule()); } 
	 EOF 
;

// Rule ProgramVariable
ruleProgramVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramVariableAccess().getGroup()); }
		(rule__ProgramVariable__Group__0)
		{ after(grammarAccess.getProgramVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeoutFunction
entryRuleTimeoutFunction
:
{ before(grammarAccess.getTimeoutFunctionRule()); }
	 ruleTimeoutFunction
{ after(grammarAccess.getTimeoutFunctionRule()); } 
	 EOF 
;

// Rule TimeoutFunction
ruleTimeoutFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeoutFunctionAccess().getGroup()); }
		(rule__TimeoutFunction__Group__0)
		{ after(grammarAccess.getTimeoutFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule TimeAmountOrRef
ruleTimeAmountOrRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeAmountOrRefAccess().getAlternatives()); }
		(rule__TimeAmountOrRef__Alternatives)
		{ after(grammarAccess.getTimeAmountOrRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConst
entryRuleConst
:
{ before(grammarAccess.getConstRule()); }
	 ruleConst
{ after(grammarAccess.getConstRule()); } 
	 EOF 
;

// Rule Const
ruleConst 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstAccess().getGroup()); }
		(rule__Const__Group__0)
		{ after(grammarAccess.getConstAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnum
entryRuleEnum
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumAccess().getGroup()); }
		(rule__Enum__Group__0)
		{ after(grammarAccess.getEnumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumMember
entryRuleEnumMember
:
{ before(grammarAccess.getEnumMemberRule()); }
	 ruleEnumMember
{ after(grammarAccess.getEnumMemberRule()); } 
	 EOF 
;

// Rule EnumMember
ruleEnumMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumMemberAccess().getGroup()); }
		(rule__EnumMember__Group__0)
		{ after(grammarAccess.getEnumMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementSequence
entryRuleStatementSequence
:
{ before(grammarAccess.getStatementSequenceRule()); }
	 ruleStatementSequence
{ after(grammarAccess.getStatementSequenceRule()); } 
	 EOF 
;

// Rule StatementSequence
ruleStatementSequence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementSequenceAccess().getGroup()); }
		(rule__StatementSequence__Group__0)
		{ after(grammarAccess.getStatementSequenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompoundStatement
entryRuleCompoundStatement
:
{ before(grammarAccess.getCompoundStatementRule()); }
	 ruleCompoundStatement
{ after(grammarAccess.getCompoundStatementRule()); } 
	 EOF 
;

// Rule CompoundStatement
ruleCompoundStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompoundStatementAccess().getGroup()); }
		(rule__CompoundStatement__Group__0)
		{ after(grammarAccess.getCompoundStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfElseStat
entryRuleIfElseStat
:
{ before(grammarAccess.getIfElseStatRule()); }
	 ruleIfElseStat
{ after(grammarAccess.getIfElseStatRule()); } 
	 EOF 
;

// Rule IfElseStat
ruleIfElseStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfElseStatAccess().getGroup()); }
		(rule__IfElseStat__Group__0)
		{ after(grammarAccess.getIfElseStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchStat
entryRuleSwitchStat
:
{ before(grammarAccess.getSwitchStatRule()); }
	 ruleSwitchStat
{ after(grammarAccess.getSwitchStatRule()); } 
	 EOF 
;

// Rule SwitchStat
ruleSwitchStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStatAccess().getGroup()); }
		(rule__SwitchStat__Group__0)
		{ after(grammarAccess.getSwitchStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseStat
entryRuleCaseStat
:
{ before(grammarAccess.getCaseStatRule()); }
	 ruleCaseStat
{ after(grammarAccess.getCaseStatRule()); } 
	 EOF 
;

// Rule CaseStat
ruleCaseStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseStatAccess().getGroup()); }
		(rule__CaseStat__Group__0)
		{ after(grammarAccess.getCaseStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefaultStat
entryRuleDefaultStat
:
{ before(grammarAccess.getDefaultStatRule()); }
	 ruleDefaultStat
{ after(grammarAccess.getDefaultStatRule()); } 
	 EOF 
;

// Rule DefaultStat
ruleDefaultStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefaultStatAccess().getGroup()); }
		(rule__DefaultStat__Group__0)
		{ after(grammarAccess.getDefaultStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SwitchOptionStatSequence
ruleSwitchOptionStatSequence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchOptionStatSequenceAccess().getGroup()); }
		(rule__SwitchOptionStatSequence__Group__0)
		{ after(grammarAccess.getSwitchOptionStatSequenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBreakStat
entryRuleBreakStat
:
{ before(grammarAccess.getBreakStatRule()); }
	 ruleBreakStat
{ after(grammarAccess.getBreakStatRule()); } 
	 EOF 
;

// Rule BreakStat
ruleBreakStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakStatAccess().getGroup()); }
		(rule__BreakStat__Group__0)
		{ after(grammarAccess.getBreakStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartProcStat
entryRuleStartProcStat
:
{ before(grammarAccess.getStartProcStatRule()); }
	 ruleStartProcStat
{ after(grammarAccess.getStartProcStatRule()); } 
	 EOF 
;

// Rule StartProcStat
ruleStartProcStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartProcStatAccess().getGroup()); }
		(rule__StartProcStat__Group__0)
		{ after(grammarAccess.getStartProcStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStopProcStat
entryRuleStopProcStat
:
{ before(grammarAccess.getStopProcStatRule()); }
	 ruleStopProcStat
{ after(grammarAccess.getStopProcStatRule()); } 
	 EOF 
;

// Rule StopProcStat
ruleStopProcStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStopProcStatAccess().getGroup()); }
		(rule__StopProcStat__Group__0)
		{ after(grammarAccess.getStopProcStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleErrorStat
entryRuleErrorStat
:
{ before(grammarAccess.getErrorStatRule()); }
	 ruleErrorStat
{ after(grammarAccess.getErrorStatRule()); } 
	 EOF 
;

// Rule ErrorStat
ruleErrorStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getErrorStatAccess().getGroup()); }
		(rule__ErrorStat__Group__0)
		{ after(grammarAccess.getErrorStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRestartStat
entryRuleRestartStat
:
{ before(grammarAccess.getRestartStatRule()); }
	 ruleRestartStat
{ after(grammarAccess.getRestartStatRule()); } 
	 EOF 
;

// Rule RestartStat
ruleRestartStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestartStatAccess().getGroup()); }
		(rule__RestartStat__Group__0)
		{ after(grammarAccess.getRestartStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResetStat
entryRuleResetStat
:
{ before(grammarAccess.getResetStatRule()); }
	 ruleResetStat
{ after(grammarAccess.getResetStatRule()); } 
	 EOF 
;

// Rule ResetStat
ruleResetStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResetStatAccess().getGroup()); }
		(rule__ResetStat__Group__0)
		{ after(grammarAccess.getResetStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoopStat
entryRuleLoopStat
:
{ before(grammarAccess.getLoopStatRule()); }
	 ruleLoopStat
{ after(grammarAccess.getLoopStatRule()); } 
	 EOF 
;

// Rule LoopStat
ruleLoopStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopStatAccess().getGroup()); }
		(rule__LoopStat__Group__0)
		{ after(grammarAccess.getLoopStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetStateStat
entryRuleSetStateStat
:
{ before(grammarAccess.getSetStateStatRule()); }
	 ruleSetStateStat
{ after(grammarAccess.getSetStateStatRule()); } 
	 EOF 
;

// Rule SetStateStat
ruleSetStateStat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetStateStatAccess().getGroup()); }
		(rule__SetStateStat__Group__0)
		{ after(grammarAccess.getSetStateStatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInfixOp
entryRuleInfixOp
:
{ before(grammarAccess.getInfixOpRule()); }
	 ruleInfixOp
{ after(grammarAccess.getInfixOpRule()); } 
	 EOF 
;

// Rule InfixOp
ruleInfixOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInfixOpAccess().getGroup()); }
		(rule__InfixOp__Group__0)
		{ after(grammarAccess.getInfixOpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixOp
entryRulePostfixOp
:
{ before(grammarAccess.getPostfixOpRule()); }
	 rulePostfixOp
{ after(grammarAccess.getPostfixOpRule()); } 
	 EOF 
;

// Rule PostfixOp
rulePostfixOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixOpAccess().getGroup()); }
		(rule__PostfixOp__Group__0)
		{ after(grammarAccess.getPostfixOpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckStateExpression
entryRuleCheckStateExpression
:
{ before(grammarAccess.getCheckStateExpressionRule()); }
	 ruleCheckStateExpression
{ after(grammarAccess.getCheckStateExpressionRule()); } 
	 EOF 
;

// Rule CheckStateExpression
ruleCheckStateExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckStateExpressionAccess().getGroup()); }
		(rule__CheckStateExpression__Group__0)
		{ after(grammarAccess.getCheckStateExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
		(rule__UnaryExpression__Alternatives)
		{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCastExpression
entryRuleCastExpression
:
{ before(grammarAccess.getCastExpressionRule()); }
	 ruleCastExpression
{ after(grammarAccess.getCastExpressionRule()); } 
	 EOF 
;

// Rule CastExpression
ruleCastExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCastExpressionAccess().getAlternatives()); }
		(rule__CastExpression__Alternatives)
		{ after(grammarAccess.getCastExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShiftExpression
entryRuleShiftExpression
:
{ before(grammarAccess.getShiftExpressionRule()); }
	 ruleShiftExpression
{ after(grammarAccess.getShiftExpressionRule()); } 
	 EOF 
;

// Rule ShiftExpression
ruleShiftExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShiftExpressionAccess().getGroup()); }
		(rule__ShiftExpression__Group__0)
		{ after(grammarAccess.getShiftExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompareExpression
entryRuleCompareExpression
:
{ before(grammarAccess.getCompareExpressionRule()); }
	 ruleCompareExpression
{ after(grammarAccess.getCompareExpressionRule()); } 
	 EOF 
;

// Rule CompareExpression
ruleCompareExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareExpressionAccess().getAlternatives()); }
		(rule__CompareExpression__Alternatives)
		{ after(grammarAccess.getCompareExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitAndExpression
entryRuleBitAndExpression
:
{ before(grammarAccess.getBitAndExpressionRule()); }
	 ruleBitAndExpression
{ after(grammarAccess.getBitAndExpressionRule()); } 
	 EOF 
;

// Rule BitAndExpression
ruleBitAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitAndExpressionAccess().getGroup()); }
		(rule__BitAndExpression__Group__0)
		{ after(grammarAccess.getBitAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitXorExpression
entryRuleBitXorExpression
:
{ before(grammarAccess.getBitXorExpressionRule()); }
	 ruleBitXorExpression
{ after(grammarAccess.getBitXorExpressionRule()); } 
	 EOF 
;

// Rule BitXorExpression
ruleBitXorExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitXorExpressionAccess().getGroup()); }
		(rule__BitXorExpression__Group__0)
		{ after(grammarAccess.getBitXorExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitOrExpression
entryRuleBitOrExpression
:
{ before(grammarAccess.getBitOrExpressionRule()); }
	 ruleBitOrExpression
{ after(grammarAccess.getBitOrExpressionRule()); } 
	 EOF 
;

// Rule BitOrExpression
ruleBitOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitOrExpressionAccess().getGroup()); }
		(rule__BitOrExpression__Group__0)
		{ after(grammarAccess.getBitOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression
:
{ before(grammarAccess.getLogicalAndExpressionRule()); }
	 ruleLogicalAndExpression
{ after(grammarAccess.getLogicalAndExpressionRule()); } 
	 EOF 
;

// Rule LogicalAndExpression
ruleLogicalAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
		(rule__LogicalAndExpression__Group__0)
		{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression
:
{ before(grammarAccess.getLogicalOrExpressionRule()); }
	 ruleLogicalOrExpression
{ after(grammarAccess.getLogicalOrExpressionRule()); } 
	 EOF 
;

// Rule LogicalOrExpression
ruleLogicalOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
		(rule__LogicalOrExpression__Group__0)
		{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression
:
{ before(grammarAccess.getAssignmentExpressionRule()); }
	 ruleAssignmentExpression
{ after(grammarAccess.getAssignmentExpressionRule()); } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
		(rule__AssignmentExpression__Group__0)
		{ after(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PortType
rulePortType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortTypeAccess().getAlternatives()); }
		(rule__PortType__Alternatives)
		{ after(grammarAccess.getPortTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule StateQualifier
ruleStateQualifier
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateQualifierAccess().getAlternatives()); }
		(rule__StateQualifier__Alternatives)
		{ after(grammarAccess.getStateQualifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule InfixPostfixOp
ruleInfixPostfixOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixPostfixOpAccess().getAlternatives()); }
		(rule__InfixPostfixOp__Alternatives)
		{ after(grammarAccess.getInfixPostfixOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AssignOperator
ruleAssignOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperatorAccess().getAlternatives()); }
		(rule__AssignOperator__Alternatives)
		{ after(grammarAccess.getAssignOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule UnaryOp
ruleUnaryOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOpAccess().getAlternatives()); }
		(rule__UnaryOp__Alternatives)
		{ after(grammarAccess.getUnaryOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CompareOp
ruleCompareOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareOpAccess().getAlternatives()); }
		(rule__CompareOp__Alternatives)
		{ after(grammarAccess.getCompareOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CompareEqOp
ruleCompareEqOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareEqOpAccess().getAlternatives()); }
		(rule__CompareEqOp__Alternatives)
		{ after(grammarAccess.getCompareEqOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ShiftOp
ruleShiftOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftOpAccess().getAlternatives()); }
		(rule__ShiftOp__Alternatives)
		{ after(grammarAccess.getShiftOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AdditiveOp
ruleAdditiveOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveOpAccess().getAlternatives()); }
		(rule__AdditiveOp__Alternatives)
		{ after(grammarAccess.getAdditiveOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MultiplicativeOp
ruleMultiplicativeOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeOpAccess().getAlternatives()); }
		(rule__MultiplicativeOp__Alternatives)
		{ after(grammarAccess.getMultiplicativeOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Type
ruleType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getEnAssignment_0_0()); }
		(rule__Program__EnAssignment_0_0)
		{ after(grammarAccess.getProgramAccess().getEnAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterGheCyrillicCapitalLetterErKeyword_0_1()); }
		'\u041F\u0420\u041E\u0413\u0420'
		{ after(grammarAccess.getProgramAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterGheCyrillicCapitalLetterErKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getConstsAssignment_4_0()); }
		(rule__Program__ConstsAssignment_4_0)
		{ after(grammarAccess.getProgramAccess().getConstsAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getEnumsAssignment_4_1()); }
		(rule__Program__EnumsAssignment_4_1)
		{ after(grammarAccess.getProgramAccess().getEnumsAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getFunctionsAssignment_4_2()); }
		(rule__Program__FunctionsAssignment_4_2)
		{ after(grammarAccess.getProgramAccess().getFunctionsAssignment_4_2()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getPortsAssignment_4_3()); }
		(rule__Program__PortsAssignment_4_3)
		{ after(grammarAccess.getProgramAccess().getPortsAssignment_4_3()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getProcessesAssignment_4_4()); }
		(rule__Program__ProcessesAssignment_4_4)
		{ after(grammarAccess.getProgramAccess().getProcessesAssignment_4_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockDefinition__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClockDefinitionAccess().getTACTKeyword_0_0()); }
		'TACT'
		{ after(grammarAccess.getClockDefinitionAccess().getTACTKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getClockDefinitionAccess().getCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterKaCyrillicCapitalLetterTeKeyword_0_1()); }
		'\u0422\u0410\u041A\u0422'
		{ after(grammarAccess.getClockDefinitionAccess().getCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterKaCyrillicCapitalLetterTeKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getPROCKeyword_0_0()); }
		'PROC'
		{ after(grammarAccess.getProcessAccess().getPROCKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_0_1()); }
		'\u041F\u0420\u041E\u0426'
		{ after(grammarAccess.getProcessAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getImportsAssignment_3_0_0()); }
		(rule__Process__ImportsAssignment_3_0_0)
		{ after(grammarAccess.getProcessAccess().getImportsAssignment_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessAccess().getVariablesAssignment_3_0_1()); }
		(rule__Process__VariablesAssignment_3_0_1)
		{ after(grammarAccess.getProcessAccess().getVariablesAssignment_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getSTATEKeyword_0_0()); }
		'STATE'
		{ after(grammarAccess.getStateAccess().getSTATEKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterOCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_0_1()); }
		'\u0421\u041E\u0421\u0422'
		{ after(grammarAccess.getStateAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterOCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedVariableListAccess().getGroup_0_0()); }
		(rule__ImportedVariableList__Group_0_0__0)
		{ after(grammarAccess.getImportedVariableListAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportedVariableListAccess().getGroup_0_1()); }
		(rule__ImportedVariableList__Group_0_1__0)
		{ after(grammarAccess.getImportedVariableListAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getPhysicalVariableParserRuleCall_0_0()); }
		rulePhysicalVariable
		{ after(grammarAccess.getProcessVariableAccess().getPhysicalVariableParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessVariableAccess().getProgramVariableParserRuleCall_0_1()); }
		ruleProgramVariable
		{ after(grammarAccess.getProcessVariableAccess().getProgramVariableParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getLocalAssignment_1_0()); }
		(rule__ProcessVariable__LocalAssignment_1_0)
		{ after(grammarAccess.getProcessVariableAccess().getLocalAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessVariableAccess().getGroup_1_1()); }
		(rule__ProcessVariable__Group_1_1__0)
		{ after(grammarAccess.getProcessVariableAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__LocalAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getLocalLOCALKeyword_1_0_0_0()); }
		'LOCAL'
		{ after(grammarAccess.getProcessVariableAccess().getLocalLOCALKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessVariableAccess().getLocalCyrillicCapitalLetterElCyrillicCapitalLetterOCyrillicCapitalLetterKaCyrillicCapitalLetterACyrillicCapitalLetterElKeyword_1_0_0_1()); }
		'\u041B\u041E\u041A\u0410\u041B'
		{ after(grammarAccess.getProcessVariableAccess().getLocalCyrillicCapitalLetterElCyrillicCapitalLetterOCyrillicCapitalLetterKaCyrillicCapitalLetterACyrillicCapitalLetterElKeyword_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__SharedAlternatives_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getSharedFORKeyword_1_1_0_0_0()); }
		'FOR'
		{ after(grammarAccess.getProcessVariableAccess().getSharedFORKeyword_1_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessVariableAccess().getSharedCyrillicCapitalLetterDeCyrillicCapitalLetterElCyrillicCapitalLetterYaKeyword_1_1_0_0_1()); }
		'\u0414\u041B\u042F'
		{ after(grammarAccess.getProcessVariableAccess().getSharedCyrillicCapitalLetterDeCyrillicCapitalLetterElCyrillicCapitalLetterYaKeyword_1_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Alternatives_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getAlternatives_1_1_1_0()); }
		(rule__ProcessVariable__Alternatives_1_1_1_0)
		{ after(grammarAccess.getProcessVariableAccess().getAlternatives_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessVariableAccess().getGroup_1_1_1_1()); }
		(rule__ProcessVariable__Group_1_1_1_1__0)
		{ after(grammarAccess.getProcessVariableAccess().getGroup_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Alternatives_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getALLKeyword_1_1_1_0_0()); }
		'ALL'
		{ after(grammarAccess.getProcessVariableAccess().getALLKeyword_1_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessVariableAccess().getCyrillicCapitalLetterVeCyrillicCapitalLetterEsCyrillicCapitalLetterIeCyrillicCapitalLetterHaKeyword_1_1_1_0_1()); }
		'\u0412\u0421\u0415\u0425'
		{ after(grammarAccess.getProcessVariableAccess().getCyrillicCapitalLetterVeCyrillicCapitalLetterEsCyrillicCapitalLetterIeCyrillicCapitalLetterHaKeyword_1_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Alternatives_1_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getPROCKeyword_1_1_1_1_0_0()); }
		'PROC'
		{ after(grammarAccess.getProcessVariableAccess().getPROCKeyword_1_1_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessVariableAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1_1_1_0_1()); }
		'\u041F\u0420\u041E\u0426'
		{ after(grammarAccess.getProcessVariableAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutFunctionAccess().getTIMEOUTKeyword_0_0()); }
		'TIMEOUT'
		{ after(grammarAccess.getTimeoutFunctionAccess().getTIMEOUTKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeoutFunctionAccess().getCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterShortICyrillicCapitalLetterEmCyrillicCapitalLetterACyrillicCapitalLetterUCyrillicCapitalLetterTeKeyword_0_1()); }
		'\u0422\u0410\u0419\u041C\u0410\u0423\u0422'
		{ after(grammarAccess.getTimeoutFunctionAccess().getCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterShortICyrillicCapitalLetterEmCyrillicCapitalLetterACyrillicCapitalLetterUCyrillicCapitalLetterTeKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutFunctionAccess().getTimeAmountOrRefParserRuleCall_1_0()); }
		ruleTimeAmountOrRef
		{ after(grammarAccess.getTimeoutFunctionAccess().getTimeAmountOrRefParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeoutFunctionAccess().getGroup_1_1()); }
		(rule__TimeoutFunction__Group_1_1__0)
		{ after(grammarAccess.getTimeoutFunctionAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeAmountOrRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAmountOrRefAccess().getTimeAssignment_0()); }
		(rule__TimeAmountOrRef__TimeAssignment_0)
		{ after(grammarAccess.getTimeAmountOrRefAccess().getTimeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeAmountOrRefAccess().getRefAssignment_1()); }
		(rule__TimeAmountOrRef__RefAssignment_1)
		{ after(grammarAccess.getTimeAmountOrRefAccess().getRefAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFUNCTIONKeyword_0_0()); }
		'FUNCTION'
		{ after(grammarAccess.getFunctionAccess().getFUNCTIONKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getCyrillicCapitalLetterEfCyrillicCapitalLetterUCyrillicCapitalLetterEnCyrillicCapitalLetterKaCyrillicCapitalLetterTseCyrillicCapitalLetterICyrillicCapitalLetterYaKeyword_0_1()); }
		'\u0424\u0423\u041D\u041A\u0426\u0418\u042F'
		{ after(grammarAccess.getFunctionAccess().getCyrillicCapitalLetterEfCyrillicCapitalLetterUCyrillicCapitalLetterEnCyrillicCapitalLetterKaCyrillicCapitalLetterTseCyrillicCapitalLetterICyrillicCapitalLetterYaKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstAccess().getCONSTKeyword_0_0()); }
		'CONST'
		{ after(grammarAccess.getConstAccess().getCONSTKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstAccess().getCyrillicCapitalLetterKaCyrillicCapitalLetterOCyrillicCapitalLetterEnCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_0_1()); }
		'\u041A\u041E\u041D\u0421\u0422'
		{ after(grammarAccess.getConstAccess().getCyrillicCapitalLetterKaCyrillicCapitalLetterOCyrillicCapitalLetterEnCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumAccess().getENUMKeyword_0_0()); }
		'ENUM'
		{ after(grammarAccess.getEnumAccess().getENUMKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterIeCyrillicCapitalLetterErCyrillicCapitalLetterIeCyrillicCapitalLetterCheCyrillicCapitalLetterICyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterIeCyrillicCapitalLetterEnCyrillicCapitalLetterICyrillicCapitalLetterIeKeyword_0_1()); }
		'\u041F\u0415\u0420\u0415\u0427\u0418\u0421\u041B\u0415\u041D\u0418\u0415'
		{ after(grammarAccess.getEnumAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterIeCyrillicCapitalLetterErCyrillicCapitalLetterIeCyrillicCapitalLetterCheCyrillicCapitalLetterICyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterIeCyrillicCapitalLetterEnCyrillicCapitalLetterICyrillicCapitalLetterIeKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0()); }
		(rule__Statement__Group_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_1()); }
		ruleCompoundStatement
		{ after(grammarAccess.getStatementAccess().getCompoundStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getStartProcStatParserRuleCall_2()); }
		ruleStartProcStat
		{ after(grammarAccess.getStatementAccess().getStartProcStatParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getStopProcStatParserRuleCall_3()); }
		ruleStopProcStat
		{ after(grammarAccess.getStatementAccess().getStopProcStatParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getErrorStatParserRuleCall_4()); }
		ruleErrorStat
		{ after(grammarAccess.getStatementAccess().getErrorStatParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRestartStatParserRuleCall_5()); }
		ruleRestartStat
		{ after(grammarAccess.getStatementAccess().getRestartStatParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getResetStatParserRuleCall_6()); }
		ruleResetStat
		{ after(grammarAccess.getStatementAccess().getResetStatParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLoopStatParserRuleCall_7()); }
		ruleLoopStat
		{ after(grammarAccess.getStatementAccess().getLoopStatParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSetStateStatParserRuleCall_8()); }
		ruleSetStateStat
		{ after(grammarAccess.getStatementAccess().getSetStateStatParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfElseStatParserRuleCall_9()); }
		ruleIfElseStat
		{ after(grammarAccess.getStatementAccess().getIfElseStatParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSwitchStatParserRuleCall_10()); }
		ruleSwitchStat
		{ after(grammarAccess.getStatementAccess().getSwitchStatParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_11()); }
		(rule__Statement__Group_11__0)
		{ after(grammarAccess.getStatementAccess().getGroup_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatAccess().getIFKeyword_0_0()); }
		'IF'
		{ after(grammarAccess.getIfElseStatAccess().getIFKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfElseStatAccess().getCyrillicCapitalLetterIeCyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterIKeyword_0_1()); }
		'\u0415\u0421\u041B\u0418'
		{ after(grammarAccess.getIfElseStatAccess().getCyrillicCapitalLetterIeCyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterIKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Alternatives_5_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatAccess().getELSEKeyword_5_0_0_0()); }
		'ELSE'
		{ after(grammarAccess.getIfElseStatAccess().getELSEKeyword_5_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfElseStatAccess().getCyrillicCapitalLetterICyrillicCapitalLetterEnCyrillicCapitalLetterACyrillicCapitalLetterCheCyrillicCapitalLetterIeKeyword_5_0_0_1()); }
		'\u0418\u041D\u0410\u0427\u0415'
		{ after(grammarAccess.getIfElseStatAccess().getCyrillicCapitalLetterICyrillicCapitalLetterEnCyrillicCapitalLetterACyrillicCapitalLetterCheCyrillicCapitalLetterIeKeyword_5_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatAccess().getSWITCHKeyword_0_0()); }
		'SWITCH'
		{ after(grammarAccess.getSwitchStatAccess().getSWITCHKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSwitchStatAccess().getCyrillicCapitalLetterErCyrillicCapitalLetterACyrillicCapitalLetterZeCyrillicCapitalLetterBeCyrillicCapitalLetterOCyrillicCapitalLetterErKeyword_0_1()); }
		'\u0420\u0410\u0417\u0411\u041E\u0420'
		{ after(grammarAccess.getSwitchStatAccess().getCyrillicCapitalLetterErCyrillicCapitalLetterACyrillicCapitalLetterZeCyrillicCapitalLetterBeCyrillicCapitalLetterOCyrillicCapitalLetterErKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStat__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatAccess().getCASEKeyword_0_0()); }
		'CASE'
		{ after(grammarAccess.getCaseStatAccess().getCASEKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCaseStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterUCyrillicCapitalLetterCheCyrillicCapitalLetterACyrillicCapitalLetterShortIKeyword_0_1()); }
		'\u0421\u041B\u0423\u0427\u0410\u0419'
		{ after(grammarAccess.getCaseStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterUCyrillicCapitalLetterCheCyrillicCapitalLetterACyrillicCapitalLetterShortIKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStat__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultStatAccess().getDEFAULTKeyword_0_0()); }
		'DEFAULT'
		{ after(grammarAccess.getDefaultStatAccess().getDEFAULTKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefaultStatAccess().getCyrillicCapitalLetterUCyrillicCapitalLetterEmCyrillicCapitalLetterOCyrillicCapitalLetterElCyrillicCapitalLetterCheCyrillicCapitalLetterACyrillicCapitalLetterEnCyrillicCapitalLetterICyrillicCapitalLetterIeKeyword_0_1()); }
		'\u0423\u041C\u041E\u041B\u0427\u0410\u041D\u0418\u0415'
		{ after(grammarAccess.getDefaultStatAccess().getCyrillicCapitalLetterUCyrillicCapitalLetterEmCyrillicCapitalLetterOCyrillicCapitalLetterElCyrillicCapitalLetterCheCyrillicCapitalLetterACyrillicCapitalLetterEnCyrillicCapitalLetterICyrillicCapitalLetterIeKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStat__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBreakStatAccess().getBREAKKeyword_0_0()); }
		'BREAK'
		{ after(grammarAccess.getBreakStatAccess().getBREAKKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBreakStatAccess().getCyrillicCapitalLetterKaCyrillicCapitalLetterOCyrillicCapitalLetterEnCyrillicCapitalLetterIeCyrillicCapitalLetterTseKeyword_0_1()); }
		'\u041A\u041E\u041D\u0415\u0426'
		{ after(grammarAccess.getBreakStatAccess().getCyrillicCapitalLetterKaCyrillicCapitalLetterOCyrillicCapitalLetterEnCyrillicCapitalLetterIeCyrillicCapitalLetterTseKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcStat__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartProcStatAccess().getSTARTKeyword_0_0()); }
		'START'
		{ after(grammarAccess.getStartProcStatAccess().getSTARTKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStartProcStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterErCyrillicCapitalLetterTeKeyword_0_1()); }
		'\u0421\u0422\u0410\u0420\u0422'
		{ after(grammarAccess.getStartProcStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterErCyrillicCapitalLetterTeKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcStat__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartProcStatAccess().getPROCKeyword_1_0()); }
		'PROC'
		{ after(grammarAccess.getStartProcStatAccess().getPROCKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStartProcStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1()); }
		'\u041F\u0420\u041E\u0426'
		{ after(grammarAccess.getStartProcStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopProcStatAccess().getSTOPKeyword_1_0()); }
		'STOP'
		{ after(grammarAccess.getStopProcStatAccess().getSTOPKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStopProcStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterOCyrillicCapitalLetterPeKeyword_1_1()); }
		'\u0421\u0422\u041E\u041F'
		{ after(grammarAccess.getStopProcStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterOCyrillicCapitalLetterPeKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopProcStatAccess().getPROCKeyword_2_0_0()); }
		'PROC'
		{ after(grammarAccess.getStopProcStatAccess().getPROCKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStopProcStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_2_0_1()); }
		'\u041F\u0420\u041E\u0426'
		{ after(grammarAccess.getStopProcStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getErrorStatAccess().getERRORKeyword_1_0()); }
		'ERROR'
		{ after(grammarAccess.getErrorStatAccess().getERRORKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getErrorStatAccess().getCyrillicCapitalLetterOCyrillicCapitalLetterShaCyrillicCapitalLetterICyrillicCapitalLetterBeCyrillicCapitalLetterKaCyrillicCapitalLetterAKeyword_1_1()); }
		'\u041E\u0428\u0418\u0411\u041A\u0410'
		{ after(grammarAccess.getErrorStatAccess().getCyrillicCapitalLetterOCyrillicCapitalLetterShaCyrillicCapitalLetterICyrillicCapitalLetterBeCyrillicCapitalLetterKaCyrillicCapitalLetterAKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getErrorStatAccess().getPROCKeyword_2_0_0()); }
		'PROC'
		{ after(grammarAccess.getErrorStatAccess().getPROCKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getErrorStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_2_0_1()); }
		'\u041F\u0420\u041E\u0426'
		{ after(grammarAccess.getErrorStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestartStatAccess().getGroup_1_0()); }
		(rule__RestartStat__Group_1_0__0)
		{ after(grammarAccess.getRestartStatAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRestartStatAccess().getGroup_1_1()); }
		(rule__RestartStat__Group_1_1__0)
		{ after(grammarAccess.getRestartStatAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResetStatAccess().getGroup_1_0()); }
		(rule__ResetStat__Group_1_0__0)
		{ after(grammarAccess.getResetStatAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getResetStatAccess().getGroup_1_1()); }
		(rule__ResetStat__Group_1_1__0)
		{ after(grammarAccess.getResetStatAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStat__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopStatAccess().getLOOPKeyword_1_0()); }
		'LOOP'
		{ after(grammarAccess.getLoopStatAccess().getLOOPKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLoopStatAccess().getCyrillicCapitalLetterZeCyrillicCapitalLetterACyrillicCapitalLetterTseCyrillicCapitalLetterICyrillicCapitalLetterKaCyrillicCapitalLetterElCyrillicCapitalLetterICyrillicCapitalLetterTeCyrillicCapitalLetterSoftSignKeyword_1_1()); }
		'\u0417\u0410\u0426\u0418\u041A\u041B\u0418\u0422\u042C'
		{ after(grammarAccess.getLoopStatAccess().getCyrillicCapitalLetterZeCyrillicCapitalLetterACyrillicCapitalLetterTseCyrillicCapitalLetterICyrillicCapitalLetterKaCyrillicCapitalLetterElCyrillicCapitalLetterICyrillicCapitalLetterTeCyrillicCapitalLetterSoftSignKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetStateStatAccess().getSETKeyword_1_0()); }
		'SET'
		{ after(grammarAccess.getSetStateStatAccess().getSETKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetStateStatAccess().getCyrillicCapitalLetterVeKeyword_1_1()); }
		'\u0412'
		{ after(grammarAccess.getSetStateStatAccess().getCyrillicCapitalLetterVeKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetStateStatAccess().getNextAssignment_2_0()); }
		(rule__SetStateStat__NextAssignment_2_0)
		{ after(grammarAccess.getSetStateStatAccess().getNextAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetStateStatAccess().getGroup_2_1()); }
		(rule__SetStateStat__Group_2_1__0)
		{ after(grammarAccess.getSetStateStatAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__NextAlternatives_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetStateStatAccess().getNextNEXTKeyword_2_0_0_0()); }
		'NEXT'
		{ after(grammarAccess.getSetStateStatAccess().getNextNEXTKeyword_2_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetStateStatAccess().getNextCyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterIeCyrillicCapitalLetterDeCyrillicCapitalLetterUCyrillicCapitalLetterYuCyrillicCapitalLetterShchaCyrillicCapitalLetterIeCyrillicCapitalLetterIeKeyword_2_0_0_1()); }
		'\u0421\u041B\u0415\u0414\u0423\u042E\u0429\u0415\u0415'
		{ after(grammarAccess.getSetStateStatAccess().getNextCyrillicCapitalLetterEsCyrillicCapitalLetterElCyrillicCapitalLetterIeCyrillicCapitalLetterDeCyrillicCapitalLetterUCyrillicCapitalLetterYuCyrillicCapitalLetterShchaCyrillicCapitalLetterIeCyrillicCapitalLetterIeKeyword_2_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Alternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetStateStatAccess().getSTATEKeyword_2_1_0_0()); }
		'STATE'
		{ after(grammarAccess.getSetStateStatAccess().getSTATEKeyword_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetStateStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterOCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_2_1_0_1()); }
		'\u0421\u041E\u0421\u0422'
		{ after(grammarAccess.getSetStateStatAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterOCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckStateExpressionAccess().getPROCKeyword_1_0()); }
		'PROC'
		{ after(grammarAccess.getCheckStateExpressionAccess().getPROCKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCheckStateExpressionAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1()); }
		'\u041F\u0420\u041E\u0426'
		{ after(grammarAccess.getCheckStateExpressionAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckStateExpressionAccess().getGroup_3_0()); }
		(rule__CheckStateExpression__Group_3_0__0)
		{ after(grammarAccess.getCheckStateExpressionAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getCheckStateExpressionAccess().getGroup_3_1()); }
		(rule__CheckStateExpression__Group_3_1__0)
		{ after(grammarAccess.getCheckStateExpressionAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getReferenceAssignment_0()); }
		(rule__PrimaryExpression__ReferenceAssignment_0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getReferenceAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
		(rule__PrimaryExpression__Group_1__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
		(rule__PrimaryExpression__Group_2__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
		(rule__PrimaryExpression__Group_3__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
		(rule__PrimaryExpression__Group_4__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getFunctionCallParserRuleCall_1()); }
		ruleFunctionCall
		{ after(grammarAccess.getUnaryExpressionAccess().getFunctionCallParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getPostfixOpParserRuleCall_2()); }
		rulePostfixOp
		{ after(grammarAccess.getUnaryExpressionAccess().getPostfixOpParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getInfixOpParserRuleCall_3()); }
		ruleInfixOp
		{ after(grammarAccess.getUnaryExpressionAccess().getInfixOpParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup_4()); }
		(rule__UnaryExpression__Group_4__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getReferenceOpAssignment_4_0_0()); }
		(rule__UnaryExpression__ReferenceOpAssignment_4_0_0)
		{ after(grammarAccess.getUnaryExpressionAccess().getReferenceOpAssignment_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getUnaryOpAssignment_4_0_1()); }
		(rule__UnaryExpression__UnaryOpAssignment_4_0_1)
		{ after(grammarAccess.getUnaryExpressionAccess().getUnaryOpAssignment_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getCastExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCastExpressionAccess().getGroup_1()); }
		(rule__CastExpression__Group_1__0)
		{ after(grammarAccess.getCastExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareExpressionAccess().getCheckStateExpressionParserRuleCall_0()); }
		ruleCheckStateExpression
		{ after(grammarAccess.getCompareExpressionAccess().getCheckStateExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareExpressionAccess().getGroup_1()); }
		(rule__CompareExpression__Group_1__0)
		{ after(grammarAccess.getCompareExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortTypeAccess().getINPUT_ENEnumLiteralDeclaration_0()); }
		('INPUT')
		{ after(grammarAccess.getPortTypeAccess().getINPUT_ENEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPortTypeAccess().getINPUT_RUEnumLiteralDeclaration_1()); }
		('\u0412\u0425\u041E\u0414')
		{ after(grammarAccess.getPortTypeAccess().getINPUT_RUEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPortTypeAccess().getOUTPUT_ENEnumLiteralDeclaration_2()); }
		('OUTPUT')
		{ after(grammarAccess.getPortTypeAccess().getOUTPUT_ENEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getPortTypeAccess().getOUTPUT_RUEnumLiteralDeclaration_3()); }
		('\u0412\u042B\u0425\u041E\u0414')
		{ after(grammarAccess.getPortTypeAccess().getOUTPUT_RUEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateQualifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateQualifierAccess().getACTIVE_ENEnumLiteralDeclaration_0()); }
		('ACTIVE')
		{ after(grammarAccess.getStateQualifierAccess().getACTIVE_ENEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateQualifierAccess().getACTIVE_RUEnumLiteralDeclaration_1()); }
		('\u0410\u041A\u0422\u0418\u0412\u041D\u041E\u0415')
		{ after(grammarAccess.getStateQualifierAccess().getACTIVE_RUEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getStateQualifierAccess().getPASSIVE_ENEnumLiteralDeclaration_2()); }
		('PASSIVE')
		{ after(grammarAccess.getStateQualifierAccess().getPASSIVE_ENEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getStateQualifierAccess().getPASSIVE_RUEnumLiteralDeclaration_3()); }
		('\u041F\u0410\u0421\u0421\u0418\u0412\u041D\u041E\u0415')
		{ after(grammarAccess.getStateQualifierAccess().getPASSIVE_RUEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getStateQualifierAccess().getSTOP_ENEnumLiteralDeclaration_4()); }
		('STOP')
		{ after(grammarAccess.getStateQualifierAccess().getSTOP_ENEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getStateQualifierAccess().getSTOP_RUEnumLiteralDeclaration_5()); }
		('\u0421\u0422\u041E\u041F')
		{ after(grammarAccess.getStateQualifierAccess().getSTOP_RUEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getStateQualifierAccess().getERROR_ENEnumLiteralDeclaration_6()); }
		('ERROR')
		{ after(grammarAccess.getStateQualifierAccess().getERROR_ENEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getStateQualifierAccess().getERROR_RUEnumLiteralDeclaration_7()); }
		('\u041E\u0428\u0418\u0411\u041A\u0410')
		{ after(grammarAccess.getStateQualifierAccess().getERROR_RUEnumLiteralDeclaration_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixPostfixOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixPostfixOpAccess().getINCEnumLiteralDeclaration_0()); }
		('++')
		{ after(grammarAccess.getInfixPostfixOpAccess().getINCEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getInfixPostfixOpAccess().getDECEnumLiteralDeclaration_1()); }
		('--')
		{ after(grammarAccess.getInfixPostfixOpAccess().getDECEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperatorAccess().getMULEnumLiteralDeclaration_1()); }
		('*=')
		{ after(grammarAccess.getAssignOperatorAccess().getMULEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperatorAccess().getDIVEnumLiteralDeclaration_2()); }
		('/=')
		{ after(grammarAccess.getAssignOperatorAccess().getDIVEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperatorAccess().getMODEnumLiteralDeclaration_3()); }
		('+=')
		{ after(grammarAccess.getAssignOperatorAccess().getMODEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperatorAccess().getSUBEnumLiteralDeclaration_4()); }
		('-=')
		{ after(grammarAccess.getAssignOperatorAccess().getSUBEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperatorAccess().getCINEnumLiteralDeclaration_5()); }
		('<<=')
		{ after(grammarAccess.getAssignOperatorAccess().getCINEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperatorAccess().getCOUTEnumLiteralDeclaration_6()); }
		('>>=')
		{ after(grammarAccess.getAssignOperatorAccess().getCOUTEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperatorAccess().getBIT_ANDEnumLiteralDeclaration_7()); }
		('&=')
		{ after(grammarAccess.getAssignOperatorAccess().getBIT_ANDEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperatorAccess().getBIT_XOREnumLiteralDeclaration_8()); }
		('^=')
		{ after(grammarAccess.getAssignOperatorAccess().getBIT_XOREnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperatorAccess().getBIT_OREnumLiteralDeclaration_9()); }
		('|=')
		{ after(grammarAccess.getAssignOperatorAccess().getBIT_OREnumLiteralDeclaration_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOpAccess().getPLUSEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getUnaryOpAccess().getPLUSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOpAccess().getMINUSEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getUnaryOpAccess().getMINUSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOpAccess().getBIT_NOTEnumLiteralDeclaration_2()); }
		('~')
		{ after(grammarAccess.getUnaryOpAccess().getBIT_NOTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOpAccess().getLOGICAL_NOTEnumLiteralDeclaration_3()); }
		('!')
		{ after(grammarAccess.getUnaryOpAccess().getLOGICAL_NOTEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareOpAccess().getLESSEnumLiteralDeclaration_0()); }
		('<')
		{ after(grammarAccess.getCompareOpAccess().getLESSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOpAccess().getGREATEREnumLiteralDeclaration_1()); }
		('>')
		{ after(grammarAccess.getCompareOpAccess().getGREATEREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOpAccess().getLESS_EQEnumLiteralDeclaration_2()); }
		('<=')
		{ after(grammarAccess.getCompareOpAccess().getLESS_EQEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOpAccess().getGREATER_EQEnumLiteralDeclaration_3()); }
		('>=')
		{ after(grammarAccess.getCompareOpAccess().getGREATER_EQEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareEqOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareEqOpAccess().getEQEnumLiteralDeclaration_0()); }
		('==')
		{ after(grammarAccess.getCompareEqOpAccess().getEQEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareEqOpAccess().getNOT_EQEnumLiteralDeclaration_1()); }
		('!=')
		{ after(grammarAccess.getCompareEqOpAccess().getNOT_EQEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftOpAccess().getLEFT_SHIFTEnumLiteralDeclaration_0()); }
		('>>')
		{ after(grammarAccess.getShiftOpAccess().getLEFT_SHIFTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getShiftOpAccess().getRIGHT_SHIFTEnumLiteralDeclaration_1()); }
		('<<')
		{ after(grammarAccess.getShiftOpAccess().getRIGHT_SHIFTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveOpAccess().getPLUSEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getAdditiveOpAccess().getPLUSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveOpAccess().getMINUSEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getAdditiveOpAccess().getMINUSEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeOpAccess().getMULEnumLiteralDeclaration_0()); }
		('*')
		{ after(grammarAccess.getMultiplicativeOpAccess().getMULEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeOpAccess().getDIVEnumLiteralDeclaration_1()); }
		('/')
		{ after(grammarAccess.getMultiplicativeOpAccess().getDIVEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeOpAccess().getMODEnumLiteralDeclaration_2()); }
		('%')
		{ after(grammarAccess.getMultiplicativeOpAccess().getMODEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getVOID_ENEnumLiteralDeclaration_0()); }
		('VOID')
		{ after(grammarAccess.getTypeAccess().getVOID_ENEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getVOID_RUEnumLiteralDeclaration_1()); }
		('\u041F\u0423\u0421\u0422\u041E')
		{ after(grammarAccess.getTypeAccess().getVOID_RUEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getFLOAT_ENEnumLiteralDeclaration_2()); }
		('FLOAT')
		{ after(grammarAccess.getTypeAccess().getFLOAT_ENEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getFLOAT_RUEnumLiteralDeclaration_3()); }
		('\u041F\u041B\u0410\u0412')
		{ after(grammarAccess.getTypeAccess().getFLOAT_RUEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDOUBLE_ENEnumLiteralDeclaration_4()); }
		('DOUBLE')
		{ after(grammarAccess.getTypeAccess().getDOUBLE_ENEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDOUBLE_RUEnumLiteralDeclaration_5()); }
		('\u0414\u041F\u041B\u0410\u0412')
		{ after(grammarAccess.getTypeAccess().getDOUBLE_RUEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getSHORT_ENEnumLiteralDeclaration_6()); }
		('SHORT')
		{ after(grammarAccess.getTypeAccess().getSHORT_ENEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getSHORT_RUEnumLiteralDeclaration_7()); }
		('\u041A\u0426\u0415\u041B')
		{ after(grammarAccess.getTypeAccess().getSHORT_RUEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getUSHORT_ENEnumLiteralDeclaration_8()); }
		('UNSIGNED SHORT')
		{ after(grammarAccess.getTypeAccess().getUSHORT_ENEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getUSHORT_RUEnumLiteralDeclaration_9()); }
		('\u0411\u0415\u0417\u0417\u041D\u0410\u041A\u041E\u0412\u041E\u0415 \u041A\u0426\u0415\u041B')
		{ after(grammarAccess.getTypeAccess().getUSHORT_RUEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getINT_ENEnumLiteralDeclaration_10()); }
		('INT')
		{ after(grammarAccess.getTypeAccess().getINT_ENEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getINT_RUEnumLiteralDeclaration_11()); }
		('\u0426\u0415\u041B')
		{ after(grammarAccess.getTypeAccess().getINT_RUEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getUINT_ENEnumLiteralDeclaration_12()); }
		('UNSIGNED INT')
		{ after(grammarAccess.getTypeAccess().getUINT_ENEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getUINT_RUEnumLiteralDeclaration_13()); }
		('\u0411\u0415\u0417\u0417\u041D\u0410\u041A\u041E\u0412\u041E\u0415 \u0426\u0415\u041B')
		{ after(grammarAccess.getTypeAccess().getUINT_RUEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getLONG_ENEnumLiteralDeclaration_14()); }
		('LONG')
		{ after(grammarAccess.getTypeAccess().getLONG_ENEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getLONG_RUEnumLiteralDeclaration_15()); }
		('\u0414\u0426\u0415\u041B')
		{ after(grammarAccess.getTypeAccess().getLONG_RUEnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getULONG_ENEnumLiteralDeclaration_16()); }
		('UNSIGNED LONG')
		{ after(grammarAccess.getTypeAccess().getULONG_ENEnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getULONG_RUEnumLiteralDeclaration_17()); }
		('\u0411\u0415\u0417\u0417\u041D\u0410\u041A\u041E\u0412\u041E\u0415 \u0414\u0426\u0415\u041B')
		{ after(grammarAccess.getTypeAccess().getULONG_RUEnumLiteralDeclaration_17()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBOOL_ENEnumLiteralDeclaration_18()); }
		('LOG')
		{ after(grammarAccess.getTypeAccess().getBOOL_ENEnumLiteralDeclaration_18()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBOOL_RUEnumLiteralDeclaration_19()); }
		('\u041B\u041E\u0413')
		{ after(grammarAccess.getTypeAccess().getBOOL_RUEnumLiteralDeclaration_19()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getAlternatives_0()); }
	(rule__Program__Alternatives_0)
	{ after(grammarAccess.getProgramAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_1()); }
	(rule__Program__NameAssignment_1)
	{ after(grammarAccess.getProgramAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getClockAssignment_3()); }
	(rule__Program__ClockAssignment_3)
	{ after(grammarAccess.getProgramAccess().getClockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getAlternatives_4()); }
	(rule__Program__Alternatives_4)*
	{ after(grammarAccess.getProgramAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClockDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClockDefinition__Group__0__Impl
	rule__ClockDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClockDefinitionAccess().getAlternatives_0()); }
	(rule__ClockDefinition__Alternatives_0)
	{ after(grammarAccess.getClockDefinitionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClockDefinition__Group__1__Impl
	rule__ClockDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClockDefinitionAccess().getValueAssignment_1()); }
	(rule__ClockDefinition__ValueAssignment_1)
	{ after(grammarAccess.getClockDefinitionAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClockDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClockDefinitionAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getClockDefinitionAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__0__Impl
	rule__Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getAlternatives_0()); }
	(rule__Process__Alternatives_0)
	{ after(grammarAccess.getProcessAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__1__Impl
	rule__Process__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getNameAssignment_1()); }
	(rule__Process__NameAssignment_1)
	{ after(grammarAccess.getProcessAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__2__Impl
	rule__Process__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__3__Impl
	rule__Process__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getGroup_3()); }
	(rule__Process__Group_3__0)*
	{ after(grammarAccess.getProcessAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__4__Impl
	rule__Process__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getStatesAssignment_4()); }
	(rule__Process__StatesAssignment_4)*
	{ after(grammarAccess.getProcessAccess().getStatesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_3__0__Impl
	rule__Process__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getAlternatives_3_0()); }
	(rule__Process__Alternatives_3_0)
	{ after(grammarAccess.getProcessAccess().getAlternatives_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getProcessAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getAlternatives_0()); }
	(rule__State__Alternatives_0)
	{ after(grammarAccess.getStateAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
	(rule__State__NameAssignment_1)
	{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getStateFunctionAssignment_3()); }
	(rule__State__StateFunctionAssignment_3)
	{ after(grammarAccess.getStateAccess().getStateFunctionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getTimeoutFunctionAssignment_4()); }
	(rule__State__TimeoutFunctionAssignment_4)?
	{ after(grammarAccess.getStateAccess().getTimeoutFunctionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedVariableList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedVariableList__Group__0__Impl
	rule__ImportedVariableList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedVariableListAccess().getAlternatives_0()); }
	(rule__ImportedVariableList__Alternatives_0)
	{ after(grammarAccess.getImportedVariableListAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedVariableList__Group__1__Impl
	rule__ImportedVariableList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedVariableListAccess().getProcessAssignment_1()); }
	(rule__ImportedVariableList__ProcessAssignment_1)
	{ after(grammarAccess.getImportedVariableListAccess().getProcessAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedVariableList__Group__2__Impl
	rule__ImportedVariableList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedVariableListAccess().getVariablesAssignment_2()); }
	(rule__ImportedVariableList__VariablesAssignment_2)
	{ after(grammarAccess.getImportedVariableListAccess().getVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedVariableList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedVariableListAccess().getGroup_3()); }
	(rule__ImportedVariableList__Group_3__0)*
	{ after(grammarAccess.getImportedVariableListAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedVariableList__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedVariableList__Group_0_0__0__Impl
	rule__ImportedVariableList__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedVariableListAccess().getFROMKeyword_0_0_0()); }
	'FROM'
	{ after(grammarAccess.getImportedVariableListAccess().getFROMKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedVariableList__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedVariableListAccess().getPROCKeyword_0_0_1()); }
	'PROC'
	{ after(grammarAccess.getImportedVariableListAccess().getPROCKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedVariableList__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedVariableList__Group_0_1__0__Impl
	rule__ImportedVariableList__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedVariableListAccess().getCyrillicCapitalLetterICyrillicCapitalLetterZeKeyword_0_1_0()); }
	'\u0418\u0417'
	{ after(grammarAccess.getImportedVariableListAccess().getCyrillicCapitalLetterICyrillicCapitalLetterZeKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedVariableList__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedVariableListAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_0_1_1()); }
	'\u041F\u0420\u041E\u0426'
	{ after(grammarAccess.getImportedVariableListAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedVariableList__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedVariableList__Group_3__0__Impl
	rule__ImportedVariableList__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedVariableListAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getImportedVariableListAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedVariableList__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedVariableListAccess().getVariablesAssignment_3_1()); }
	(rule__ImportedVariableList__VariablesAssignment_3_1)
	{ after(grammarAccess.getImportedVariableListAccess().getVariablesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVariable__Group__0__Impl
	rule__ProcessVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVariableAccess().getAlternatives_0()); }
	(rule__ProcessVariable__Alternatives_0)
	{ after(grammarAccess.getProcessVariableAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVariableAccess().getAlternatives_1()); }
	(rule__ProcessVariable__Alternatives_1)
	{ after(grammarAccess.getProcessVariableAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessVariable__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVariable__Group_1_1__0__Impl
	rule__ProcessVariable__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVariableAccess().getSharedAssignment_1_1_0()); }
	(rule__ProcessVariable__SharedAssignment_1_1_0)
	{ after(grammarAccess.getProcessVariableAccess().getSharedAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVariable__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVariableAccess().getAlternatives_1_1_1()); }
	(rule__ProcessVariable__Alternatives_1_1_1)
	{ after(grammarAccess.getProcessVariableAccess().getAlternatives_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessVariable__Group_1_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVariable__Group_1_1_1_1__0__Impl
	rule__ProcessVariable__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVariableAccess().getAlternatives_1_1_1_1_0()); }
	(rule__ProcessVariable__Alternatives_1_1_1_1_0)
	{ after(grammarAccess.getProcessVariableAccess().getAlternatives_1_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVariable__Group_1_1_1_1__1__Impl
	rule__ProcessVariable__Group_1_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVariableAccess().getProcessesAssignment_1_1_1_1_1()); }
	(rule__ProcessVariable__ProcessesAssignment_1_1_1_1_1)
	{ after(grammarAccess.getProcessVariableAccess().getProcessesAssignment_1_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVariable__Group_1_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVariableAccess().getGroup_1_1_1_1_2()); }
	(rule__ProcessVariable__Group_1_1_1_1_2__0)*
	{ after(grammarAccess.getProcessVariableAccess().getGroup_1_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessVariable__Group_1_1_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVariable__Group_1_1_1_1_2__0__Impl
	rule__ProcessVariable__Group_1_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVariableAccess().getCommaKeyword_1_1_1_1_2_0()); }
	','
	{ after(grammarAccess.getProcessVariableAccess().getCommaKeyword_1_1_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVariable__Group_1_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__Group_1_1_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVariableAccess().getProcessesAssignment_1_1_1_1_2_1()); }
	(rule__ProcessVariable__ProcessesAssignment_1_1_1_1_2_1)
	{ after(grammarAccess.getProcessVariableAccess().getProcessesAssignment_1_1_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PhysicalVariable__Group__0__Impl
	rule__PhysicalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhysicalVariableAccess().getTypeAssignment_0()); }
	(rule__PhysicalVariable__TypeAssignment_0)
	{ after(grammarAccess.getPhysicalVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PhysicalVariable__Group__1__Impl
	rule__PhysicalVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhysicalVariableAccess().getNameAssignment_1()); }
	(rule__PhysicalVariable__NameAssignment_1)
	{ after(grammarAccess.getPhysicalVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PhysicalVariable__Group__2__Impl
	rule__PhysicalVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhysicalVariableAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getPhysicalVariableAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PhysicalVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhysicalVariableAccess().getMappingAssignment_3()); }
	(rule__PhysicalVariable__MappingAssignment_3)
	{ after(grammarAccess.getPhysicalVariableAccess().getMappingAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PortMapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortMapping__Group__0__Impl
	rule__PortMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortMappingAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getPortMappingAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortMapping__Group__1__Impl
	rule__PortMapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortMappingAccess().getPortAssignment_1()); }
	(rule__PortMapping__PortAssignment_1)
	{ after(grammarAccess.getPortMappingAccess().getPortAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortMapping__Group__2__Impl
	rule__PortMapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortMappingAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getPortMappingAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortMapping__Group__3__Impl
	rule__PortMapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortMappingAccess().getBitsAssignment_3()); }
	(rule__PortMapping__BitsAssignment_3)
	{ after(grammarAccess.getPortMappingAccess().getBitsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortMapping__Group__4__Impl
	rule__PortMapping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortMappingAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getPortMappingAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortMapping__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortMappingAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPortMappingAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Port__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__0__Impl
	rule__Port__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getTypeAssignment_0()); }
	(rule__Port__TypeAssignment_0)
	{ after(grammarAccess.getPortAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__1__Impl
	rule__Port__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getNameAssignment_1()); }
	(rule__Port__NameAssignment_1)
	{ after(grammarAccess.getPortAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__2__Impl
	rule__Port__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getAddr1Assignment_2()); }
	(rule__Port__Addr1Assignment_2)
	{ after(grammarAccess.getPortAccess().getAddr1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__3__Impl
	rule__Port__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getAddr2Assignment_3()); }
	(rule__Port__Addr2Assignment_3)
	{ after(grammarAccess.getPortAccess().getAddr2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__4__Impl
	rule__Port__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getSizeAssignment_4()); }
	(rule__Port__SizeAssignment_4)
	{ after(grammarAccess.getPortAccess().getSizeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getPortAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramVariable__Group__0__Impl
	rule__ProgramVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramVariableAccess().getTypeAssignment_0()); }
	(rule__ProgramVariable__TypeAssignment_0)
	{ after(grammarAccess.getProgramVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramVariableAccess().getNameAssignment_1()); }
	(rule__ProgramVariable__NameAssignment_1)
	{ after(grammarAccess.getProgramVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeoutFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutFunction__Group__0__Impl
	rule__TimeoutFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutFunctionAccess().getAlternatives_0()); }
	(rule__TimeoutFunction__Alternatives_0)
	{ after(grammarAccess.getTimeoutFunctionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutFunction__Group__1__Impl
	rule__TimeoutFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutFunctionAccess().getAlternatives_1()); }
	(rule__TimeoutFunction__Alternatives_1)
	{ after(grammarAccess.getTimeoutFunctionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutFunction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutFunctionAccess().getBodyAssignment_2()); }
	(rule__TimeoutFunction__BodyAssignment_2)
	{ after(grammarAccess.getTimeoutFunctionAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeoutFunction__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutFunction__Group_1_1__0__Impl
	rule__TimeoutFunction__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutFunctionAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getTimeoutFunctionAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutFunction__Group_1_1__1__Impl
	rule__TimeoutFunction__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutFunctionAccess().getTimeAmountOrRefParserRuleCall_1_1_1()); }
	ruleTimeAmountOrRef
	{ after(grammarAccess.getTimeoutFunctionAccess().getTimeAmountOrRefParserRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutFunction__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutFunctionAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getTimeoutFunctionAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getAlternatives_0()); }
	(rule__Function__Alternatives_0)
	{ after(grammarAccess.getFunctionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getReturnTypeAssignment_1()); }
	(rule__Function__ReturnTypeAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getReturnTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_2()); }
	(rule__Function__NameAssignment_2)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_4()); }
	(rule__Function__Group_4__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getFunctionAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__0__Impl
	rule__Function__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getArgTypesAssignment_4_0()); }
	(rule__Function__ArgTypesAssignment_4_0)
	{ after(grammarAccess.getFunctionAccess().getArgTypesAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__1__Impl
	rule__Function__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getAsteriskKeyword_4_1()); }
	('*')?
	{ after(grammarAccess.getFunctionAccess().getAsteriskKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_4_2()); }
	(rule__Function__Group_4_2__0)*
	{ after(grammarAccess.getFunctionAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4_2__0__Impl
	rule__Function__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4_2__1__Impl
	rule__Function__Group_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getArgTypesAssignment_4_2_1()); }
	(rule__Function__ArgTypesAssignment_4_2_1)
	{ after(grammarAccess.getFunctionAccess().getArgTypesAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getAsteriskKeyword_4_2_2()); }
	('*')?
	{ after(grammarAccess.getFunctionAccess().getAsteriskKeyword_4_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Const__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const__Group__0__Impl
	rule__Const__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstAccess().getAlternatives_0()); }
	(rule__Const__Alternatives_0)
	{ after(grammarAccess.getConstAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const__Group__1__Impl
	rule__Const__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstAccess().getNameAssignment_1()); }
	(rule__Const__NameAssignment_1)
	{ after(grammarAccess.getConstAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const__Group__2__Impl
	rule__Const__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstAccess().getValueAssignment_2()); }
	(rule__Const__ValueAssignment_2)
	{ after(grammarAccess.getConstAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Const__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getConstAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getAlternatives_0()); }
	(rule__Enum__Alternatives_0)
	{ after(grammarAccess.getEnumAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getEnumMembersAssignment_2()); }
	(rule__Enum__EnumMembersAssignment_2)
	{ after(grammarAccess.getEnumAccess().getEnumMembersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getGroup_3()); }
	(rule__Enum__Group_3__0)*
	{ after(grammarAccess.getEnumAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__4__Impl
	rule__Enum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getEnumAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group_3__0__Impl
	rule__Enum__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getEnumAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getEnumMembersAssignment_3_1()); }
	(rule__Enum__EnumMembersAssignment_3_1)
	{ after(grammarAccess.getEnumAccess().getEnumMembersAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumMember__Group__0__Impl
	rule__EnumMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumMemberAccess().getNameAssignment_0()); }
	(rule__EnumMember__NameAssignment_0)
	{ after(grammarAccess.getEnumMemberAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumMemberAccess().getGroup_1()); }
	(rule__EnumMember__Group_1__0)?
	{ after(grammarAccess.getEnumMemberAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMember__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumMember__Group_1__0__Impl
	rule__EnumMember__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumMemberAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getEnumMemberAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumMember__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumMemberAccess().getValueAssignment_1_1()); }
	(rule__EnumMember__ValueAssignment_1_1)
	{ after(grammarAccess.getEnumMemberAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementAction_0_0()); }
	()
	{ after(grammarAccess.getStatementAccess().getStatementAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_11__0__Impl
	rule__Statement__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_11_0()); }
	ruleExpression
	{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_11_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementSequence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSequence__Group__0__Impl
	rule__StatementSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSequence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSequenceAccess().getStatementSequenceAction_0()); }
	()
	{ after(grammarAccess.getStatementSequenceAccess().getStatementSequenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSequence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementSequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSequence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementSequenceAccess().getStatementsAssignment_1()); }
	(rule__StatementSequence__StatementsAssignment_1)*
	{ after(grammarAccess.getStatementSequenceAccess().getStatementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundStatement__Group__0__Impl
	rule__CompoundStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0()); }
	()
	{ after(grammarAccess.getCompoundStatementAccess().getCompoundStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundStatement__Group__1__Impl
	rule__CompoundStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCompoundStatementAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundStatement__Group__2__Impl
	rule__CompoundStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundStatementAccess().getStatementsAssignment_2()); }
	(rule__CompoundStatement__StatementsAssignment_2)*
	{ after(grammarAccess.getCompoundStatementAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getCompoundStatementAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStat__Group__0__Impl
	rule__IfElseStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatAccess().getAlternatives_0()); }
	(rule__IfElseStat__Alternatives_0)
	{ after(grammarAccess.getIfElseStatAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStat__Group__1__Impl
	rule__IfElseStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfElseStatAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStat__Group__2__Impl
	rule__IfElseStat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatAccess().getCondAssignment_2()); }
	(rule__IfElseStat__CondAssignment_2)
	{ after(grammarAccess.getIfElseStatAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStat__Group__3__Impl
	rule__IfElseStat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfElseStatAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStat__Group__4__Impl
	rule__IfElseStat__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatAccess().getThenAssignment_4()); }
	(rule__IfElseStat__ThenAssignment_4)
	{ after(grammarAccess.getIfElseStatAccess().getThenAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStat__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatAccess().getGroup_5()); }
	(rule__IfElseStat__Group_5__0)?
	{ after(grammarAccess.getIfElseStatAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStat__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStat__Group_5__0__Impl
	rule__IfElseStat__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatAccess().getGroup_5_0()); }
	(rule__IfElseStat__Group_5_0__0)
	{ after(grammarAccess.getIfElseStatAccess().getGroup_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStat__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatAccess().getElseAssignment_5_1()); }
	(rule__IfElseStat__ElseAssignment_5_1)
	{ after(grammarAccess.getIfElseStatAccess().getElseAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseStat__Group_5_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfElseStat__Group_5_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__Group_5_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfElseStatAccess().getAlternatives_5_0_0()); }
	(rule__IfElseStat__Alternatives_5_0_0)
	{ after(grammarAccess.getIfElseStatAccess().getAlternatives_5_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStat__Group__0__Impl
	rule__SwitchStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatAccess().getAlternatives_0()); }
	(rule__SwitchStat__Alternatives_0)
	{ after(grammarAccess.getSwitchStatAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStat__Group__1__Impl
	rule__SwitchStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSwitchStatAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStat__Group__2__Impl
	rule__SwitchStat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatAccess().getExprAssignment_2()); }
	(rule__SwitchStat__ExprAssignment_2)
	{ after(grammarAccess.getSwitchStatAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStat__Group__3__Impl
	rule__SwitchStat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSwitchStatAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStat__Group__4__Impl
	rule__SwitchStat__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getSwitchStatAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStat__Group__5__Impl
	rule__SwitchStat__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatAccess().getOptionsAssignment_5()); }
	(rule__SwitchStat__OptionsAssignment_5)*
	{ after(grammarAccess.getSwitchStatAccess().getOptionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStat__Group__6__Impl
	rule__SwitchStat__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatAccess().getDefaultOptionAssignment_6()); }
	(rule__SwitchStat__DefaultOptionAssignment_6)?
	{ after(grammarAccess.getSwitchStatAccess().getDefaultOptionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStat__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getSwitchStatAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStat__Group__0__Impl
	rule__CaseStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatAccess().getAlternatives_0()); }
	(rule__CaseStat__Alternatives_0)
	{ after(grammarAccess.getCaseStatAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStat__Group__1__Impl
	rule__CaseStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatAccess().getOptionAssignment_1()); }
	(rule__CaseStat__OptionAssignment_1)
	{ after(grammarAccess.getCaseStatAccess().getOptionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStat__Group__2__Impl
	rule__CaseStat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getCaseStatAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStat__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatAccess().getSwitchOptionStatSequenceParserRuleCall_3()); }
	ruleSwitchOptionStatSequence
	{ after(grammarAccess.getCaseStatAccess().getSwitchOptionStatSequenceParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultStat__Group__0__Impl
	rule__DefaultStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultStatAccess().getAlternatives_0()); }
	(rule__DefaultStat__Alternatives_0)
	{ after(grammarAccess.getDefaultStatAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultStat__Group__1__Impl
	rule__DefaultStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultStatAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getDefaultStatAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultStat__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultStatAccess().getSwitchOptionStatSequenceParserRuleCall_2()); }
	ruleSwitchOptionStatSequence
	{ after(grammarAccess.getDefaultStatAccess().getSwitchOptionStatSequenceParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchOptionStatSequence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchOptionStatSequence__Group__0__Impl
	rule__SwitchOptionStatSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchOptionStatSequence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchOptionStatSequenceAccess().getStatementsAssignment_0()); }
	(rule__SwitchOptionStatSequence__StatementsAssignment_0)*
	{ after(grammarAccess.getSwitchOptionStatSequenceAccess().getStatementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchOptionStatSequence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchOptionStatSequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchOptionStatSequence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchOptionStatSequenceAccess().getHasBreakAssignment_1()); }
	(rule__SwitchOptionStatSequence__HasBreakAssignment_1)?
	{ after(grammarAccess.getSwitchOptionStatSequenceAccess().getHasBreakAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStat__Group__0__Impl
	rule__BreakStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatAccess().getAlternatives_0()); }
	(rule__BreakStat__Alternatives_0)
	{ after(grammarAccess.getBreakStatAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getBreakStatAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartProcStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcStat__Group__0__Impl
	rule__StartProcStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcStatAccess().getAlternatives_0()); }
	(rule__StartProcStat__Alternatives_0)
	{ after(grammarAccess.getStartProcStatAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcStat__Group__1__Impl
	rule__StartProcStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcStatAccess().getAlternatives_1()); }
	(rule__StartProcStat__Alternatives_1)?
	{ after(grammarAccess.getStartProcStatAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcStat__Group__2__Impl
	rule__StartProcStat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcStatAccess().getProcessAssignment_2()); }
	(rule__StartProcStat__ProcessAssignment_2)
	{ after(grammarAccess.getStartProcStatAccess().getProcessAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcStat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcStat__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcStat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcStatAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getStartProcStatAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StopProcStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcStat__Group__0__Impl
	rule__StopProcStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcStatAccess().getStopProcStatAction_0()); }
	()
	{ after(grammarAccess.getStopProcStatAccess().getStopProcStatAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcStat__Group__1__Impl
	rule__StopProcStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcStatAccess().getAlternatives_1()); }
	(rule__StopProcStat__Alternatives_1)
	{ after(grammarAccess.getStopProcStatAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcStat__Group__2__Impl
	rule__StopProcStat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcStatAccess().getGroup_2()); }
	(rule__StopProcStat__Group_2__0)?
	{ after(grammarAccess.getStopProcStatAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcStat__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcStatAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getStopProcStatAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StopProcStat__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcStat__Group_2__0__Impl
	rule__StopProcStat__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcStatAccess().getAlternatives_2_0()); }
	(rule__StopProcStat__Alternatives_2_0)?
	{ after(grammarAccess.getStopProcStatAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcStat__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcStatAccess().getProcessAssignment_2_1()); }
	(rule__StopProcStat__ProcessAssignment_2_1)
	{ after(grammarAccess.getStopProcStatAccess().getProcessAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorStat__Group__0__Impl
	rule__ErrorStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorStatAccess().getErrorStatAction_0()); }
	()
	{ after(grammarAccess.getErrorStatAccess().getErrorStatAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorStat__Group__1__Impl
	rule__ErrorStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorStatAccess().getAlternatives_1()); }
	(rule__ErrorStat__Alternatives_1)
	{ after(grammarAccess.getErrorStatAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorStat__Group__2__Impl
	rule__ErrorStat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorStatAccess().getGroup_2()); }
	(rule__ErrorStat__Group_2__0)?
	{ after(grammarAccess.getErrorStatAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorStat__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorStatAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getErrorStatAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorStat__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorStat__Group_2__0__Impl
	rule__ErrorStat__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorStatAccess().getAlternatives_2_0()); }
	(rule__ErrorStat__Alternatives_2_0)?
	{ after(grammarAccess.getErrorStatAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorStat__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorStatAccess().getProcessAssignment_2_1()); }
	(rule__ErrorStat__ProcessAssignment_2_1)
	{ after(grammarAccess.getErrorStatAccess().getProcessAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestartStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartStat__Group__0__Impl
	rule__RestartStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartStatAccess().getRestartStatAction_0()); }
	()
	{ after(grammarAccess.getRestartStatAccess().getRestartStatAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartStat__Group__1__Impl
	rule__RestartStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartStatAccess().getAlternatives_1()); }
	(rule__RestartStat__Alternatives_1)
	{ after(grammarAccess.getRestartStatAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartStat__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartStatAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getRestartStatAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestartStat__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartStat__Group_1_0__0__Impl
	rule__RestartStat__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartStatAccess().getRESTARTKeyword_1_0_0()); }
	'RESTART'
	{ after(grammarAccess.getRestartStatAccess().getRESTARTKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartStat__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartStatAccess().getPROCKeyword_1_0_1()); }
	'PROC'
	{ after(grammarAccess.getRestartStatAccess().getPROCKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestartStat__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartStat__Group_1_1__0__Impl
	rule__RestartStat__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartStatAccess().getCyrillicCapitalLetterErCyrillicCapitalLetterIeCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterErCyrillicCapitalLetterTeKeyword_1_1_0()); }
	'\u0420\u0415\u0421\u0422\u0410\u0420\u0422'
	{ after(grammarAccess.getRestartStatAccess().getCyrillicCapitalLetterErCyrillicCapitalLetterIeCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterErCyrillicCapitalLetterTeKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestartStat__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestartStat__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestartStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1_1()); }
	'\u041F\u0420\u041E\u0426'
	{ after(grammarAccess.getRestartStatAccess().getCyrillicCapitalLetterPeCyrillicCapitalLetterErCyrillicCapitalLetterOCyrillicCapitalLetterTseKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResetStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResetStat__Group__0__Impl
	rule__ResetStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResetStatAccess().getResetStatAction_0()); }
	()
	{ after(grammarAccess.getResetStatAccess().getResetStatAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResetStat__Group__1__Impl
	rule__ResetStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResetStatAccess().getAlternatives_1()); }
	(rule__ResetStat__Alternatives_1)
	{ after(grammarAccess.getResetStatAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResetStat__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResetStatAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getResetStatAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResetStat__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResetStat__Group_1_0__0__Impl
	rule__ResetStat__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResetStatAccess().getRESTARTKeyword_1_0_0()); }
	'RESTART'
	{ after(grammarAccess.getResetStatAccess().getRESTARTKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResetStat__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResetStatAccess().getTIMERKeyword_1_0_1()); }
	'TIMER'
	{ after(grammarAccess.getResetStatAccess().getTIMERKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResetStat__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResetStat__Group_1_1__0__Impl
	rule__ResetStat__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResetStatAccess().getCyrillicCapitalLetterErCyrillicCapitalLetterIeCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterErCyrillicCapitalLetterTeKeyword_1_1_0()); }
	'\u0420\u0415\u0421\u0422\u0410\u0420\u0422'
	{ after(grammarAccess.getResetStatAccess().getCyrillicCapitalLetterErCyrillicCapitalLetterIeCyrillicCapitalLetterEsCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterErCyrillicCapitalLetterTeKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResetStat__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetStat__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResetStatAccess().getCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterShortICyrillicCapitalLetterEmCyrillicCapitalLetterIeCyrillicCapitalLetterErKeyword_1_1_1()); }
	'\u0422\u0410\u0419\u041C\u0415\u0420'
	{ after(grammarAccess.getResetStatAccess().getCyrillicCapitalLetterTeCyrillicCapitalLetterACyrillicCapitalLetterShortICyrillicCapitalLetterEmCyrillicCapitalLetterIeCyrillicCapitalLetterErKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoopStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopStat__Group__0__Impl
	rule__LoopStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopStatAccess().getLoopStatAction_0()); }
	()
	{ after(grammarAccess.getLoopStatAccess().getLoopStatAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopStat__Group__1__Impl
	rule__LoopStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopStatAccess().getAlternatives_1()); }
	(rule__LoopStat__Alternatives_1)
	{ after(grammarAccess.getLoopStatAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoopStat__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopStatAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getLoopStatAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetStateStat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStat__Group__0__Impl
	rule__SetStateStat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatAccess().getSetStateStatAction_0()); }
	()
	{ after(grammarAccess.getSetStateStatAccess().getSetStateStatAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStat__Group__1__Impl
	rule__SetStateStat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatAccess().getAlternatives_1()); }
	(rule__SetStateStat__Alternatives_1)
	{ after(grammarAccess.getSetStateStatAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStat__Group__2__Impl
	rule__SetStateStat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatAccess().getAlternatives_2()); }
	(rule__SetStateStat__Alternatives_2)
	{ after(grammarAccess.getSetStateStatAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStat__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getSetStateStatAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetStateStat__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStat__Group_2_1__0__Impl
	rule__SetStateStat__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatAccess().getAlternatives_2_1_0()); }
	(rule__SetStateStat__Alternatives_2_1_0)
	{ after(grammarAccess.getSetStateStatAccess().getAlternatives_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStat__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatAccess().getStateAssignment_2_1_1()); }
	(rule__SetStateStat__StateAssignment_2_1_1)
	{ after(grammarAccess.getSetStateStatAccess().getStateAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixOp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOp__Group__0__Impl
	rule__InfixOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOpAccess().getOpAssignment_0()); }
	(rule__InfixOp__OpAssignment_0)
	{ after(grammarAccess.getInfixOpAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOpAccess().getRefAssignment_1()); }
	(rule__InfixOp__RefAssignment_1)
	{ after(grammarAccess.getInfixOpAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixOp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixOp__Group__0__Impl
	rule__PostfixOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixOpAccess().getRefAssignment_0()); }
	(rule__PostfixOp__RefAssignment_0)
	{ after(grammarAccess.getPostfixOpAccess().getRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixOpAccess().getOpAssignment_1()); }
	(rule__PostfixOp__OpAssignment_1)
	{ after(grammarAccess.getPostfixOpAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0()); }
	(rule__FunctionCall__FunctionAssignment_0)
	{ after(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_2()); }
	(rule__FunctionCall__Group_2__0)?
	{ after(grammarAccess.getFunctionCallAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2__0__Impl
	rule__FunctionCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_0()); }
	(rule__FunctionCall__ArgsAssignment_2_0)
	{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
	(rule__FunctionCall__Group_2_1__0)*
	{ after(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2_1__0__Impl
	rule__FunctionCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_1_1()); }
	(rule__FunctionCall__ArgsAssignment_2_1_1)
	{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckStateExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckStateExpression__Group__0__Impl
	rule__CheckStateExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckStateExpressionAccess().getLogicalNotAssignment_0()); }
	(rule__CheckStateExpression__LogicalNotAssignment_0)?
	{ after(grammarAccess.getCheckStateExpressionAccess().getLogicalNotAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckStateExpression__Group__1__Impl
	rule__CheckStateExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckStateExpressionAccess().getAlternatives_1()); }
	(rule__CheckStateExpression__Alternatives_1)
	{ after(grammarAccess.getCheckStateExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckStateExpression__Group__2__Impl
	rule__CheckStateExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckStateExpressionAccess().getProcessAssignment_2()); }
	(rule__CheckStateExpression__ProcessAssignment_2)
	{ after(grammarAccess.getCheckStateExpressionAccess().getProcessAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckStateExpression__Group__3__Impl
	rule__CheckStateExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckStateExpressionAccess().getAlternatives_3()); }
	(rule__CheckStateExpression__Alternatives_3)
	{ after(grammarAccess.getCheckStateExpressionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckStateExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckStateExpressionAccess().getQualfierAssignment_4()); }
	(rule__CheckStateExpression__QualfierAssignment_4)
	{ after(grammarAccess.getCheckStateExpressionAccess().getQualfierAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckStateExpression__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckStateExpression__Group_3_0__0__Impl
	rule__CheckStateExpression__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckStateExpressionAccess().getINKeyword_3_0_0()); }
	'IN'
	{ after(grammarAccess.getCheckStateExpressionAccess().getINKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckStateExpression__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckStateExpressionAccess().getSTATEKeyword_3_0_1()); }
	'STATE'
	{ after(grammarAccess.getCheckStateExpressionAccess().getSTATEKeyword_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckStateExpression__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckStateExpression__Group_3_1__0__Impl
	rule__CheckStateExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckStateExpressionAccess().getCyrillicCapitalLetterVeKeyword_3_1_0()); }
	'\u0412'
	{ after(grammarAccess.getCheckStateExpressionAccess().getCyrillicCapitalLetterVeKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckStateExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckStateExpressionAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterOCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_3_1_1()); }
	'\u0421\u041E\u0421\u0422'
	{ after(grammarAccess.getCheckStateExpressionAccess().getCyrillicCapitalLetterEsCyrillicCapitalLetterOCyrillicCapitalLetterEsCyrillicCapitalLetterTeKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getIntegerAssignment_1_1()); }
	(rule__PrimaryExpression__IntegerAssignment_1_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getIntegerAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getFloatingAssignment_2_1()); }
	(rule__PrimaryExpression__FloatingAssignment_2_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getFloatingAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryExpressionAccess().getPrimaryExpressionAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getBoolAssignment_3_1()); }
	(rule__PrimaryExpression__BoolAssignment_3_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getBoolAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__0__Impl
	rule__PrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__1__Impl
	rule__PrimaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getNestedExprAssignment_4_1()); }
	(rule__PrimaryExpression__NestedExprAssignment_4_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getNestedExprAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_4__0__Impl
	rule__UnaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives_4_0()); }
	(rule__UnaryExpression__Alternatives_4_0)
	{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getRightAssignment_4_1()); }
	(rule__UnaryExpression__RightAssignment_4_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getRightAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1__0__Impl
	rule__CastExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1__1__Impl
	rule__CastExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getTypeAssignment_1_1()); }
	(rule__CastExpression__TypeAssignment_1_1)
	{ after(grammarAccess.getCastExpressionAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1__2__Impl
	rule__CastExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getRightAssignment_1_3()); }
	(rule__CastExpression__RightAssignment_1_3)
	{ after(grammarAccess.getCastExpressionAccess().getRightAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getCastExpressionParserRuleCall_0()); }
	ruleCastExpression
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getCastExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getMulOpAssignment_1_1()); }
	(rule__MultiplicativeExpression__MulOpAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getMulOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
	(rule__MultiplicativeExpression__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getAddOpAssignment_1_1()); }
	(rule__AdditiveExpression__AddOpAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getAddOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
	(rule__AdditiveExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group__0__Impl
	rule__ShiftExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
	{ after(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getGroup_1()); }
	(rule__ShiftExpression__Group_1__0)*
	{ after(grammarAccess.getShiftExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group_1__0__Impl
	rule__ShiftExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getShiftExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getShiftExpressionAccess().getShiftExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group_1__1__Impl
	rule__ShiftExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getShiftOpAssignment_1_1()); }
	(rule__ShiftExpression__ShiftOpAssignment_1_1)
	{ after(grammarAccess.getShiftExpressionAccess().getShiftOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getRightAssignment_1_2()); }
	(rule__ShiftExpression__RightAssignment_1_2)
	{ after(grammarAccess.getShiftExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group_1__0__Impl
	rule__CompareExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getShiftExpressionParserRuleCall_1_0()); }
	ruleShiftExpression
	{ after(grammarAccess.getCompareExpressionAccess().getShiftExpressionParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getGroup_1_1()); }
	(rule__CompareExpression__Group_1_1__0)*
	{ after(grammarAccess.getCompareExpressionAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group_1_1__0__Impl
	rule__CompareExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getCompareExpressionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getCompareExpressionAccess().getCompareExpressionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group_1_1__1__Impl
	rule__CompareExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getCmpOpAssignment_1_1_1()); }
	(rule__CompareExpression__CmpOpAssignment_1_1_1)
	{ after(grammarAccess.getCompareExpressionAccess().getCmpOpAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1_2()); }
	(rule__CompareExpression__RightAssignment_1_1_2)
	{ after(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getCompareExpressionParserRuleCall_0()); }
	ruleCompareExpression
	{ after(grammarAccess.getEqualityExpressionAccess().getCompareExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getEqCmpOpAssignment_1_1()); }
	(rule__EqualityExpression__EqCmpOpAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getEqCmpOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
	(rule__EqualityExpression__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitAndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAndExpression__Group__0__Impl
	rule__BitAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
	{ after(grammarAccess.getBitAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndExpressionAccess().getGroup_1()); }
	(rule__BitAndExpression__Group_1__0)*
	{ after(grammarAccess.getBitAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitAndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAndExpression__Group_1__0__Impl
	rule__BitAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndExpressionAccess().getBitAndExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBitAndExpressionAccess().getBitAndExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAndExpression__Group_1__1__Impl
	rule__BitAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndExpressionAccess().getBIT_ANDTerminalRuleCall_1_1()); }
	RULE_BIT_AND
	{ after(grammarAccess.getBitAndExpressionAccess().getBIT_ANDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__BitAndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getBitAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitXorExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXorExpression__Group__0__Impl
	rule__BitXorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXorExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXorExpressionAccess().getBitAndExpressionParserRuleCall_0()); }
	ruleBitAndExpression
	{ after(grammarAccess.getBitXorExpressionAccess().getBitAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXorExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXorExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXorExpressionAccess().getGroup_1()); }
	(rule__BitXorExpression__Group_1__0)*
	{ after(grammarAccess.getBitXorExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitXorExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXorExpression__Group_1__0__Impl
	rule__BitXorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXorExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXorExpressionAccess().getBitXorExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBitXorExpressionAccess().getBitXorExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXorExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXorExpression__Group_1__1__Impl
	rule__BitXorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXorExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXorExpressionAccess().getBIT_XORTerminalRuleCall_1_1()); }
	RULE_BIT_XOR
	{ after(grammarAccess.getBitXorExpressionAccess().getBIT_XORTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXorExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitXorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXorExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitXorExpressionAccess().getRightAssignment_1_2()); }
	(rule__BitXorExpression__RightAssignment_1_2)
	{ after(grammarAccess.getBitXorExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOrExpression__Group__0__Impl
	rule__BitOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrExpressionAccess().getBitXorExpressionParserRuleCall_0()); }
	ruleBitXorExpression
	{ after(grammarAccess.getBitOrExpressionAccess().getBitXorExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrExpressionAccess().getGroup_1()); }
	(rule__BitOrExpression__Group_1__0)*
	{ after(grammarAccess.getBitOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BitOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOrExpression__Group_1__0__Impl
	rule__BitOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrExpressionAccess().getBitOrExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBitOrExpressionAccess().getBitOrExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOrExpression__Group_1__1__Impl
	rule__BitOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrExpressionAccess().getBIT_ORTerminalRuleCall_1_1()); }
	RULE_BIT_OR
	{ after(grammarAccess.getBitOrExpressionAccess().getBIT_ORTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BitOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__BitOrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getBitOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group__0__Impl
	rule__LogicalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getBitOrExpressionParserRuleCall_0()); }
	ruleBitOrExpression
	{ after(grammarAccess.getLogicalAndExpressionAccess().getBitOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
	(rule__LogicalAndExpression__Group_1__0)*
	{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1__0__Impl
	rule__LogicalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1__1__Impl
	rule__LogicalAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getLOGICAL_ANDTerminalRuleCall_1_1()); }
	RULE_LOGICAL_AND
	{ after(grammarAccess.getLogicalAndExpressionAccess().getLOGICAL_ANDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__LogicalAndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getLogicalAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group__0__Impl
	rule__LogicalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
	ruleLogicalAndExpression
	{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
	(rule__LogicalOrExpression__Group_1__0)*
	{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1__0__Impl
	rule__LogicalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1__1__Impl
	rule__LogicalOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getLOGICAL_ORTerminalRuleCall_1_1()); }
	RULE_LOGICAL_OR
	{ after(grammarAccess.getLogicalOrExpressionAccess().getLOGICAL_ORTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__LogicalOrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getLogicalOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group__0__Impl
	rule__AssignmentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getGroup_0()); }
	(rule__AssignmentExpression__Group_0__0)?
	{ after(grammarAccess.getAssignmentExpressionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getExprAssignment_1()); }
	(rule__AssignmentExpression__ExprAssignment_1)
	{ after(grammarAccess.getAssignmentExpressionAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group_0__0__Impl
	rule__AssignmentExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getAssignVarAssignment_0_0()); }
	(rule__AssignmentExpression__AssignVarAssignment_0_0)
	{ after(grammarAccess.getAssignmentExpressionAccess().getAssignVarAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getAssignOpAssignment_0_1()); }
	(rule__AssignmentExpression__AssignOpAssignment_0_1)
	{ after(grammarAccess.getAssignmentExpressionAccess().getAssignOpAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__EnAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getEnPROGRKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getProgramAccess().getEnPROGRKeyword_0_0_0()); }
			'PROGR'
			{ after(grammarAccess.getProgramAccess().getEnPROGRKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getProgramAccess().getEnPROGRKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ClockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getClockClockDefinitionParserRuleCall_3_0()); }
		ruleClockDefinition
		{ after(grammarAccess.getProgramAccess().getClockClockDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ConstsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getConstsConstParserRuleCall_4_0_0()); }
		ruleConst
		{ after(grammarAccess.getProgramAccess().getConstsConstParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__EnumsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getEnumsEnumParserRuleCall_4_1_0()); }
		ruleEnum
		{ after(grammarAccess.getProgramAccess().getEnumsEnumParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__FunctionsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_4_2_0()); }
		ruleFunction
		{ after(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__PortsAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getPortsPortParserRuleCall_4_3_0()); }
		rulePort
		{ after(grammarAccess.getProgramAccess().getPortsPortParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ProcessesAssignment_4_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProcessesProcessParserRuleCall_4_4_0()); }
		ruleProcess
		{ after(grammarAccess.getProgramAccess().getProcessesProcessParserRuleCall_4_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClockDefinition__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClockDefinitionAccess().getValueINTEGERTerminalRuleCall_1_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getClockDefinitionAccess().getValueINTEGERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ImportsAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getImportsImportedVariableListParserRuleCall_3_0_0_0()); }
		ruleImportedVariableList
		{ after(grammarAccess.getProcessAccess().getImportsImportedVariableListParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__VariablesAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getVariablesProcessVariableParserRuleCall_3_0_1_0()); }
		ruleProcessVariable
		{ after(grammarAccess.getProcessAccess().getVariablesProcessVariableParserRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__StatesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getStatesStateParserRuleCall_4_0()); }
		ruleState
		{ after(grammarAccess.getProcessAccess().getStatesStateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__StateFunctionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getStateFunctionStatementSequenceParserRuleCall_3_0()); }
		ruleStatementSequence
		{ after(grammarAccess.getStateAccess().getStateFunctionStatementSequenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__TimeoutFunctionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getTimeoutFunctionTimeoutFunctionParserRuleCall_4_0()); }
		ruleTimeoutFunction
		{ after(grammarAccess.getStateAccess().getTimeoutFunctionTimeoutFunctionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__ProcessAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedVariableListAccess().getProcessProcessCrossReference_1_0()); }
		(
			{ before(grammarAccess.getImportedVariableListAccess().getProcessProcessIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getImportedVariableListAccess().getProcessProcessIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getImportedVariableListAccess().getProcessProcessCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__VariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableCrossReference_2_0()); }
		(
			{ before(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedVariableList__VariablesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getImportedVariableListAccess().getVariablesProcessVariableCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__LocalAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getLocalAlternatives_1_0_0()); }
		(rule__ProcessVariable__LocalAlternatives_1_0_0)
		{ after(grammarAccess.getProcessVariableAccess().getLocalAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__SharedAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getSharedAlternatives_1_1_0_0()); }
		(rule__ProcessVariable__SharedAlternatives_1_1_0_0)
		{ after(grammarAccess.getProcessVariableAccess().getSharedAlternatives_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__ProcessesAssignment_1_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getProcessesProcessCrossReference_1_1_1_1_1_0()); }
		(
			{ before(grammarAccess.getProcessVariableAccess().getProcessesProcessIDTerminalRuleCall_1_1_1_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProcessVariableAccess().getProcessesProcessIDTerminalRuleCall_1_1_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getProcessVariableAccess().getProcessesProcessCrossReference_1_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__ProcessesAssignment_1_1_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getProcessesProcessCrossReference_1_1_1_1_2_1_0()); }
		(
			{ before(grammarAccess.getProcessVariableAccess().getProcessesProcessIDTerminalRuleCall_1_1_1_1_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProcessVariableAccess().getProcessesProcessIDTerminalRuleCall_1_1_1_1_2_1_0_1()); }
		)
		{ after(grammarAccess.getProcessVariableAccess().getProcessesProcessCrossReference_1_1_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalVariable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalVariableAccess().getTypeTypeEnumRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getPhysicalVariableAccess().getTypeTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPhysicalVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalVariable__MappingAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalVariableAccess().getMappingPortMappingParserRuleCall_3_0()); }
		rulePortMapping
		{ after(grammarAccess.getPhysicalVariableAccess().getMappingPortMappingParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__PortAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortMappingAccess().getPortPortCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPortMappingAccess().getPortPortIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPortMappingAccess().getPortPortIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPortMappingAccess().getPortPortCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortMapping__BitsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortMappingAccess().getBitsINTEGERTerminalRuleCall_3_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getPortMappingAccess().getBitsINTEGERTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getTypePortTypeEnumRuleCall_0_0()); }
		rulePortType
		{ after(grammarAccess.getPortAccess().getTypePortTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Addr1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getAddr1INTEGERTerminalRuleCall_2_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getPortAccess().getAddr1INTEGERTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Addr2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getAddr2INTEGERTerminalRuleCall_3_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getPortAccess().getAddr2INTEGERTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__SizeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getSizeINTEGERTerminalRuleCall_4_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getPortAccess().getSizeINTEGERTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramVariable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramVariableAccess().getTypeTypeEnumRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getProgramVariableAccess().getTypeTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProgramVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutFunction__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutFunctionAccess().getBodyStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getTimeoutFunctionAccess().getBodyStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeAmountOrRef__TimeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAmountOrRefAccess().getTimeINTEGERTerminalRuleCall_0_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getTimeAmountOrRefAccess().getTimeINTEGERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeAmountOrRef__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAmountOrRefAccess().getRefIdReferenceCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTimeAmountOrRefAccess().getRefIdReferenceIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTimeAmountOrRefAccess().getRefIdReferenceIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTimeAmountOrRefAccess().getRefIdReferenceCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ReturnTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getReturnTypeTypeEnumRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getReturnTypeTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ArgTypesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getArgTypesTypeEnumRuleCall_4_0_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getArgTypesTypeEnumRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ArgTypesAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getArgTypesTypeEnumRuleCall_4_2_1_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getArgTypesTypeEnumRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConstAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Const__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConstAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__EnumMembersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumAccess().getEnumMembersEnumMemberParserRuleCall_2_0()); }
		ruleEnumMember
		{ after(grammarAccess.getEnumAccess().getEnumMembersEnumMemberParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__EnumMembersAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumAccess().getEnumMembersEnumMemberParserRuleCall_3_1_0()); }
		ruleEnumMember
		{ after(grammarAccess.getEnumAccess().getEnumMembersEnumMemberParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumMemberAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumMemberAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumMemberAccess().getValueExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEnumMemberAccess().getValueExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSequence__StatementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementSequenceAccess().getStatementsStatementParserRuleCall_1_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementSequenceAccess().getStatementsStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundStatement__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompoundStatementAccess().getStatementsStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getCompoundStatementAccess().getStatementsStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatAccess().getCondExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfElseStatAccess().getCondExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__ThenAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatAccess().getThenStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getIfElseStatAccess().getThenStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseStat__ElseAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfElseStatAccess().getElseStatementParserRuleCall_5_1_0()); }
		ruleStatement
		{ after(grammarAccess.getIfElseStatAccess().getElseStatementParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatAccess().getExprExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSwitchStatAccess().getExprExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__OptionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatAccess().getOptionsCaseStatParserRuleCall_5_0()); }
		ruleCaseStat
		{ after(grammarAccess.getSwitchStatAccess().getOptionsCaseStatParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStat__DefaultOptionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatAccess().getDefaultOptionDefaultStatParserRuleCall_6_0()); }
		ruleDefaultStat
		{ after(grammarAccess.getSwitchStatAccess().getDefaultOptionDefaultStatParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStat__OptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatAccess().getOptionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCaseStatAccess().getOptionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchOptionStatSequence__StatementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchOptionStatSequenceAccess().getStatementsStatementParserRuleCall_0_0()); }
		ruleStatement
		{ after(grammarAccess.getSwitchOptionStatSequenceAccess().getStatementsStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchOptionStatSequence__HasBreakAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchOptionStatSequenceAccess().getHasBreakBreakStatParserRuleCall_1_0()); }
		ruleBreakStat
		{ after(grammarAccess.getSwitchOptionStatSequenceAccess().getHasBreakBreakStatParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcStat__ProcessAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartProcStatAccess().getProcessProcessCrossReference_2_0()); }
		(
			{ before(grammarAccess.getStartProcStatAccess().getProcessProcessIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStartProcStatAccess().getProcessProcessIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getStartProcStatAccess().getProcessProcessCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcStat__ProcessAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopProcStatAccess().getProcessProcessCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getStopProcStatAccess().getProcessProcessIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStopProcStatAccess().getProcessProcessIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getStopProcStatAccess().getProcessProcessCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorStat__ProcessAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getErrorStatAccess().getProcessProcessCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getErrorStatAccess().getProcessProcessIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getErrorStatAccess().getProcessProcessIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getErrorStatAccess().getProcessProcessCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__NextAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetStateStatAccess().getNextAlternatives_2_0_0()); }
		(rule__SetStateStat__NextAlternatives_2_0_0)
		{ after(grammarAccess.getSetStateStatAccess().getNextAlternatives_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStat__StateAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetStateStatAccess().getStateStateCrossReference_2_1_1_0()); }
		(
			{ before(grammarAccess.getSetStateStatAccess().getStateStateIDTerminalRuleCall_2_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSetStateStatAccess().getStateStateIDTerminalRuleCall_2_1_1_0_1()); }
		)
		{ after(grammarAccess.getSetStateStatAccess().getStateStateCrossReference_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOp__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOpAccess().getOpInfixPostfixOpEnumRuleCall_0_0()); }
		ruleInfixPostfixOp
		{ after(grammarAccess.getInfixOpAccess().getOpInfixPostfixOpEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOp__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOpAccess().getRefIdReferenceCrossReference_1_0()); }
		(
			{ before(grammarAccess.getInfixOpAccess().getRefIdReferenceIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInfixOpAccess().getRefIdReferenceIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getInfixOpAccess().getRefIdReferenceCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOp__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixOpAccess().getRefIdReferenceCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPostfixOpAccess().getRefIdReferenceIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPostfixOpAccess().getRefIdReferenceIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPostfixOpAccess().getRefIdReferenceCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOp__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixOpAccess().getOpInfixPostfixOpEnumRuleCall_1_0()); }
		ruleInfixPostfixOp
		{ after(grammarAccess.getPostfixOpAccess().getOpInfixPostfixOpEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__LogicalNotAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckStateExpressionAccess().getLogicalNotExclamationMarkKeyword_0_0()); }
		(
			{ before(grammarAccess.getCheckStateExpressionAccess().getLogicalNotExclamationMarkKeyword_0_0()); }
			'!'
			{ after(grammarAccess.getCheckStateExpressionAccess().getLogicalNotExclamationMarkKeyword_0_0()); }
		)
		{ after(grammarAccess.getCheckStateExpressionAccess().getLogicalNotExclamationMarkKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__ProcessAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckStateExpressionAccess().getProcessProcessCrossReference_2_0()); }
		(
			{ before(grammarAccess.getCheckStateExpressionAccess().getProcessProcessIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCheckStateExpressionAccess().getProcessProcessIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getCheckStateExpressionAccess().getProcessProcessCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckStateExpression__QualfierAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckStateExpressionAccess().getQualfierStateQualifierEnumRuleCall_4_0()); }
		ruleStateQualifier
		{ after(grammarAccess.getCheckStateExpressionAccess().getQualfierStateQualifierEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ReferenceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getReferenceIdReferenceCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPrimaryExpressionAccess().getReferenceIdReferenceIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryExpressionAccess().getReferenceIdReferenceIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPrimaryExpressionAccess().getReferenceIdReferenceCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__IntegerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getIntegerINTEGERTerminalRuleCall_1_1_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getPrimaryExpressionAccess().getIntegerINTEGERTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__FloatingAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getFloatingFLOATTerminalRuleCall_2_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getPrimaryExpressionAccess().getFloatingFLOATTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__BoolAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getBoolBOOL_LITERALTerminalRuleCall_3_1_0()); }
		RULE_BOOL_LITERAL
		{ after(grammarAccess.getPrimaryExpressionAccess().getBoolBOOL_LITERALTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NestedExprAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getNestedExprExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getNestedExprExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ReferenceOpAssignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getReferenceOpBIT_ANDTerminalRuleCall_4_0_0_0()); }
		RULE_BIT_AND
		{ after(grammarAccess.getUnaryExpressionAccess().getReferenceOpBIT_ANDTerminalRuleCall_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__UnaryOpAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getUnaryOpUnaryOpEnumRuleCall_4_0_1_0()); }
		ruleUnaryOp
		{ after(grammarAccess.getUnaryExpressionAccess().getUnaryOpUnaryOpEnumRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__RightAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getRightCastExpressionParserRuleCall_4_1_0()); }
		ruleCastExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getRightCastExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getTypeTypeEnumRuleCall_1_1_0()); }
		ruleType
		{ after(grammarAccess.getCastExpressionAccess().getTypeTypeEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__RightAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getRightCastExpressionParserRuleCall_1_3_0()); }
		ruleCastExpression
		{ after(grammarAccess.getCastExpressionAccess().getRightCastExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__MulOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getMulOpMultiplicativeOpEnumRuleCall_1_1_0()); }
		ruleMultiplicativeOp
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getMulOpMultiplicativeOpEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightCastExpressionParserRuleCall_1_2_0()); }
		ruleCastExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightCastExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__AddOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getAddOpAdditiveOpEnumRuleCall_1_1_0()); }
		ruleAdditiveOp
		{ after(grammarAccess.getAdditiveExpressionAccess().getAddOpAdditiveOpEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__ShiftOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftExpressionAccess().getShiftOpShiftOpEnumRuleCall_1_1_0()); }
		ruleShiftOp
		{ after(grammarAccess.getShiftExpressionAccess().getShiftOpShiftOpEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftExpressionAccess().getRightShiftExpressionParserRuleCall_1_2_0()); }
		ruleShiftExpression
		{ after(grammarAccess.getShiftExpressionAccess().getRightShiftExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__CmpOpAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareExpressionAccess().getCmpOpCompareOpEnumRuleCall_1_1_1_0()); }
		ruleCompareOp
		{ after(grammarAccess.getCompareExpressionAccess().getCmpOpCompareOpEnumRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_2_0()); }
		ruleCompareExpression
		{ after(grammarAccess.getCompareExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__EqCmpOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getEqCmpOpCompareEqOpEnumRuleCall_1_1_0()); }
		ruleCompareEqOp
		{ after(grammarAccess.getEqualityExpressionAccess().getEqCmpOpCompareEqOpEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitAndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitAndExpressionAccess().getRightBitAndExpressionParserRuleCall_1_2_0()); }
		ruleBitAndExpression
		{ after(grammarAccess.getBitAndExpressionAccess().getRightBitAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitXorExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitXorExpressionAccess().getRightBitXorExpressionParserRuleCall_1_2_0()); }
		ruleBitXorExpression
		{ after(grammarAccess.getBitXorExpressionAccess().getRightBitXorExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitOrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitOrExpressionAccess().getRightBitOrExpressionParserRuleCall_1_2_0()); }
		ruleBitOrExpression
		{ after(grammarAccess.getBitOrExpressionAccess().getRightBitOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalAndExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_2_0()); }
		ruleLogicalAndExpression
		{ after(grammarAccess.getLogicalAndExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalOrExpressionParserRuleCall_1_2_0()); }
		ruleLogicalOrExpression
		{ after(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__AssignVarAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getAssignVarIdReferenceCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getAssignmentExpressionAccess().getAssignVarIdReferenceIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAssignmentExpressionAccess().getAssignVarIdReferenceIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getAssignmentExpressionAccess().getAssignVarIdReferenceCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__AssignOpAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getAssignOpAssignOperatorEnumRuleCall_0_1_0()); }
		ruleAssignOperator
		{ after(grammarAccess.getAssignmentExpressionAccess().getAssignOpAssignOperatorEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getExprLogicalOrExpressionParserRuleCall_1_0()); }
		ruleLogicalOrExpression
		{ after(grammarAccess.getAssignmentExpressionAccess().getExprLogicalOrExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_LOGICAL_OR : '||';

RULE_LOGICAL_AND : '&&';

RULE_BIT_OR : '|';

RULE_BIT_XOR : '^';

RULE_BIT_AND : '&';

RULE_INTEGER : RULE_SIGN? (RULE_HEX|RULE_OCTAL|RULE_DECIMAL) (RULE_LONG|RULE_UNSIGNED)?;

RULE_FLOAT : (RULE_SIGN? RULE_DEC_FLOAT|RULE_HEX_FLOAT);

fragment RULE_DEC_FLOAT : RULE_DEC_SEQUENCE? '.' RULE_DEC_SEQUENCE (RULE_EXPONENT RULE_SIGN RULE_DEC_SEQUENCE)? (RULE_LONG|RULE_FLOAT_SUFFIX)?;

fragment RULE_HEX_FLOAT : RULE_HEX_SEQUENCE? '.' RULE_HEX_SEQUENCE (RULE_BIN_EXPONENT RULE_SIGN RULE_DEC_SEQUENCE)? (RULE_LONG|RULE_FLOAT_SUFFIX)?;

fragment RULE_DEC_SEQUENCE : ('0'..'9')+;

fragment RULE_HEX_SEQUENCE : ('0'..'9'|'a'..'f'|'A'..'F')+;

fragment RULE_BIN_EXPONENT : ('p'|'P');

fragment RULE_EXPONENT : ('e'|'E');

fragment RULE_SIGN : ('+'|'-');

fragment RULE_DECIMAL : ('0'|'1'..'9' ('0'..'9')*);

fragment RULE_OCTAL : '0' ('0'..'7')+;

fragment RULE_HEX : RULE_HEX_PREFIX RULE_HEX_SEQUENCE;

fragment RULE_HEX_PREFIX : '0' ('x'|'X');

fragment RULE_LONG : ('L'|'l');

fragment RULE_FLOAT_SUFFIX : ('F'|'f');

fragment RULE_UNSIGNED : ('U'|'u');

RULE_BOOL_LITERAL : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'\u0430'..'\u044F'|'\u0410'..'\u042F'|'_') ('a'..'z'|'A'..'Z'|'\u0430'..'\u044F'|'\u0410'..'\u042F'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
